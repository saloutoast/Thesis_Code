
EPMtest.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000a  00800100  0000111c  000011b0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000111c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000014  0080010a  0080010a  000011ba  2**0
                  ALLOC
  3 .debug_aranges 00000160  00000000  00000000  000011ba  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 000001c5  00000000  00000000  0000131a  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00002131  00000000  00000000  000014df  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00001067  00000000  00000000  00003610  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00001306  00000000  00000000  00004677  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001c0  00000000  00000000  00005980  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003f8  00000000  00000000  00005b40  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000095a  00000000  00000000  00005f38  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000050  00000000  00000000  00006892  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__vector_7>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 25 01 	jmp	0x24a	; 0x24a <__vector_14>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__vector_23>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	11 e0       	ldi	r17, 0x01	; 1
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	ec e1       	ldi	r30, 0x1C	; 28
      7c:	f1 e1       	ldi	r31, 0x11	; 17
      7e:	02 c0       	rjmp	.+4      	; 0x84 <.do_copy_data_start>

00000080 <.do_copy_data_loop>:
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0

00000084 <.do_copy_data_start>:
      84:	aa 30       	cpi	r26, 0x0A	; 10
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <.do_copy_data_loop>

0000008a <__do_clear_bss>:
      8a:	11 e0       	ldi	r17, 0x01	; 1
      8c:	aa e0       	ldi	r26, 0x0A	; 10
      8e:	b1 e0       	ldi	r27, 0x01	; 1
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	ae 31       	cpi	r26, 0x1E	; 30
      96:	b1 07       	cpc	r27, r17
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	0e 94 fd 01 	call	0x3fa	; 0x3fa <main>
      9e:	0c 94 8c 08 	jmp	0x1118	; 0x1118 <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <__vector_23>:

	}

}

ISR(ANALOG_COMP_vect) { // essentially the receive_msg() routine
      a6:	1f 92       	push	r1
      a8:	0f 92       	push	r0
      aa:	0f b6       	in	r0, 0x3f	; 63
      ac:	0f 92       	push	r0
      ae:	11 24       	eor	r1, r1
      b0:	2f 93       	push	r18
      b2:	3f 93       	push	r19
      b4:	8f 93       	push	r24
      b6:	9f 93       	push	r25

	if (rcving==0) {
      b8:	80 91 10 01 	lds	r24, 0x0110
      bc:	88 23       	and	r24, r24
      be:	89 f4       	brne	.+34     	; 0xe2 <__vector_23+0x3c>

		TCNT2=0;
      c0:	10 92 b2 00 	sts	0x00B2, r1
		rcving=1;
      c4:	81 e0       	ldi	r24, 0x01	; 1
      c6:	80 93 10 01 	sts	0x0110, r24
		rcvd=0x80;
      ca:	80 e8       	ldi	r24, 0x80	; 128
      cc:	80 93 11 01 	sts	0x0111, r24
		ACSR &= ~(1<<ACIS0); // change to falling edge
      d0:	80 b7       	in	r24, 0x30	; 48
      d2:	8e 7f       	andi	r24, 0xFE	; 254
      d4:	80 bf       	out	0x30, r24	; 48
		rcv_sx = 0; // reset success flag
      d6:	10 92 13 01 	sts	0x0113, r1
      da:	10 92 12 01 	sts	0x0112, r1

		//PORTB |= (1<<PORTB0); // clear success LEDs from previous message
		PORTB &= ~(1<<PORTB1);
      de:	29 98       	cbi	0x05, 1	; 5
      e0:	9c c0       	rjmp	.+312    	; 0x21a <__vector_23+0x174>
		//PORTB &= ~(1<<PORTB2);

	} else { // first rising edge has been detected (rcving=1)

		if (!(ACSR&(1<<ACIS0))) { // check for first falling edge
      e2:	00 b6       	in	r0, 0x30	; 48
      e4:	00 fc       	sbrc	r0, 0
      e6:	0d c0       	rjmp	.+26     	; 0x102 <__vector_23+0x5c>

			distance = 0;
      e8:	10 92 14 01 	sts	0x0114, r1
			distance |= TCNT2; // use timer value for distance
      ec:	80 91 14 01 	lds	r24, 0x0114
      f0:	90 91 b2 00 	lds	r25, 0x00B2
      f4:	98 2b       	or	r25, r24
      f6:	90 93 14 01 	sts	0x0114, r25
			ACSR |= (1<<ACIS0); // switch back to rising edge
      fa:	80 b7       	in	r24, 0x30	; 48
      fc:	81 60       	ori	r24, 0x01	; 1
      fe:	80 bf       	out	0x30, r24	; 48
     100:	8c c0       	rjmp	.+280    	; 0x21a <__vector_23+0x174>
		} else { // on subsequent rising edges
			// TODO: add LED debugging for each bit
			//PORTB |= (1<<PORTB0);

			// match rising edges to closest expected time in rcvd
			bit_time = 0;
     102:	10 92 15 01 	sts	0x0115, r1
			bit_time |= TCNT2; // time that rising edge was detected
     106:	80 91 15 01 	lds	r24, 0x0115
     10a:	90 91 b2 00 	lds	r25, 0x00B2
     10e:	98 2b       	or	r25, r24
     110:	90 93 15 01 	sts	0x0115, r25
			
			if ((bit_time>=10)&(bit_time<=17)) { rcvd |= 0x40; }
     114:	80 91 15 01 	lds	r24, 0x0115
     118:	90 91 15 01 	lds	r25, 0x0115
     11c:	8a 30       	cpi	r24, 0x0A	; 10
     11e:	30 f0       	brcs	.+12     	; 0x12c <__vector_23+0x86>
     120:	92 31       	cpi	r25, 0x12	; 18
     122:	20 f4       	brcc	.+8      	; 0x12c <__vector_23+0x86>
     124:	80 91 11 01 	lds	r24, 0x0111
     128:	80 64       	ori	r24, 0x40	; 64
     12a:	3b c0       	rjmp	.+118    	; 0x1a2 <__vector_23+0xfc>
			else if ((bit_time>=22)&(bit_time<=29)) { rcvd |= 0x20; }
     12c:	80 91 15 01 	lds	r24, 0x0115
     130:	90 91 15 01 	lds	r25, 0x0115
     134:	86 31       	cpi	r24, 0x16	; 22
     136:	30 f0       	brcs	.+12     	; 0x144 <__vector_23+0x9e>
     138:	9e 31       	cpi	r25, 0x1E	; 30
     13a:	20 f4       	brcc	.+8      	; 0x144 <__vector_23+0x9e>
     13c:	80 91 11 01 	lds	r24, 0x0111
     140:	80 62       	ori	r24, 0x20	; 32
     142:	2f c0       	rjmp	.+94     	; 0x1a2 <__vector_23+0xfc>
			else if ((bit_time>=35)&(bit_time<=42)) { rcvd |= 0x10; }
     144:	80 91 15 01 	lds	r24, 0x0115
     148:	90 91 15 01 	lds	r25, 0x0115
     14c:	83 32       	cpi	r24, 0x23	; 35
     14e:	30 f0       	brcs	.+12     	; 0x15c <__vector_23+0xb6>
     150:	9b 32       	cpi	r25, 0x2B	; 43
     152:	20 f4       	brcc	.+8      	; 0x15c <__vector_23+0xb6>
     154:	80 91 11 01 	lds	r24, 0x0111
     158:	80 61       	ori	r24, 0x10	; 16
     15a:	23 c0       	rjmp	.+70     	; 0x1a2 <__vector_23+0xfc>
			else if ((bit_time>=47)&(bit_time<=54)) { rcvd |= 0x08; }
     15c:	80 91 15 01 	lds	r24, 0x0115
     160:	90 91 15 01 	lds	r25, 0x0115
     164:	8f 32       	cpi	r24, 0x2F	; 47
     166:	30 f0       	brcs	.+12     	; 0x174 <__vector_23+0xce>
     168:	97 33       	cpi	r25, 0x37	; 55
     16a:	20 f4       	brcc	.+8      	; 0x174 <__vector_23+0xce>
     16c:	80 91 11 01 	lds	r24, 0x0111
     170:	88 60       	ori	r24, 0x08	; 8
     172:	17 c0       	rjmp	.+46     	; 0x1a2 <__vector_23+0xfc>
			else if ((bit_time>=60)&(bit_time<=67)) { rcvd |= 0x04; }
     174:	80 91 15 01 	lds	r24, 0x0115
     178:	90 91 15 01 	lds	r25, 0x0115
     17c:	8c 33       	cpi	r24, 0x3C	; 60
     17e:	30 f0       	brcs	.+12     	; 0x18c <__vector_23+0xe6>
     180:	94 34       	cpi	r25, 0x44	; 68
     182:	20 f4       	brcc	.+8      	; 0x18c <__vector_23+0xe6>
     184:	80 91 11 01 	lds	r24, 0x0111
     188:	84 60       	ori	r24, 0x04	; 4
     18a:	0b c0       	rjmp	.+22     	; 0x1a2 <__vector_23+0xfc>
			else if ((bit_time>=72)&(bit_time<=79)) { rcvd |= 0x02; }
     18c:	80 91 15 01 	lds	r24, 0x0115
     190:	90 91 15 01 	lds	r25, 0x0115
     194:	88 34       	cpi	r24, 0x48	; 72
     196:	40 f0       	brcs	.+16     	; 0x1a8 <__vector_23+0x102>
     198:	90 35       	cpi	r25, 0x50	; 80
     19a:	30 f4       	brcc	.+12     	; 0x1a8 <__vector_23+0x102>
     19c:	80 91 11 01 	lds	r24, 0x0111
     1a0:	82 60       	ori	r24, 0x02	; 2
     1a2:	80 93 11 01 	sts	0x0111, r24
     1a6:	39 c0       	rjmp	.+114    	; 0x21a <__vector_23+0x174>
			else if ((bit_time>=85)&(bit_time<=92)) { // eighth bit has been received
     1a8:	80 91 15 01 	lds	r24, 0x0115
     1ac:	90 91 15 01 	lds	r25, 0x0115
     1b0:	85 35       	cpi	r24, 0x55	; 85
     1b2:	68 f1       	brcs	.+90     	; 0x20e <__vector_23+0x168>
     1b4:	9d 35       	cpi	r25, 0x5D	; 93
     1b6:	58 f5       	brcc	.+86     	; 0x20e <__vector_23+0x168>
				rcvd |= 0x01; 
     1b8:	80 91 11 01 	lds	r24, 0x0111
     1bc:	81 60       	ori	r24, 0x01	; 1
     1be:	80 93 11 01 	sts	0x0111, r24
				rcv_sx = 1;
     1c2:	81 e0       	ldi	r24, 0x01	; 1
     1c4:	90 e0       	ldi	r25, 0x00	; 0
     1c6:	90 93 13 01 	sts	0x0113, r25
     1ca:	80 93 12 01 	sts	0x0112, r24
				lastRcv = 0;
     1ce:	10 92 16 01 	sts	0x0116, r1
				lastRcv |= rcvd; // store message
     1d2:	90 91 16 01 	lds	r25, 0x0116
     1d6:	80 91 11 01 	lds	r24, 0x0111
     1da:	89 2b       	or	r24, r25
     1dc:	80 93 16 01 	sts	0x0116, r24

				// turn on LEDs for success
				PORTB |= (1<<PORTB1);
     1e0:	29 9a       	sbi	0x05, 1	; 5
				//PORTB &= ~(1<<PORTB0);
				//if (lastRcv==toRcv1) { PORTB |= (1<<PORTB2); }
				//if (lastRcv==toRcv2) { PORTB |= (1<<PORTB0); }

				rcv_time = 0;
     1e2:	10 92 18 01 	sts	0x0118, r1
     1e6:	10 92 17 01 	sts	0x0117, r1
				rcv_time |= TCNT1;
     1ea:	80 91 17 01 	lds	r24, 0x0117
     1ee:	90 91 18 01 	lds	r25, 0x0118
     1f2:	20 91 84 00 	lds	r18, 0x0084
     1f6:	30 91 85 00 	lds	r19, 0x0085
     1fa:	82 2b       	or	r24, r18
     1fc:	93 2b       	or	r25, r19
     1fe:	90 93 18 01 	sts	0x0118, r25
     202:	80 93 17 01 	sts	0x0117, r24
				/* if (rcv_time >= 1000) {
					near = rcv_time/4;
					far = 3*near;
				} */

				TCNT1 = 0; // reset timer1 on received messages
     206:	10 92 85 00 	sts	0x0085, r1
     20a:	10 92 84 00 	sts	0x0084, r1
				rcving = 0; // reset receiving variables
				TCNT2 = 0;
				rcvd = 0;

			}  else { // bad rising edge means message is bad, discard and reset
				rcving = 0; // reset receiving variables
     20e:	10 92 10 01 	sts	0x0110, r1
				TCNT2 = 0;
     212:	10 92 b2 00 	sts	0x00B2, r1
				rcvd = 0;
     216:	10 92 11 01 	sts	0x0111, r1
	/* while(ACSR & (1<<ACO)) {
		PORTB |= (1<<PORTB0);
	}
	PORTB &= ~(1<<PORTB0); */

} 
     21a:	9f 91       	pop	r25
     21c:	8f 91       	pop	r24
     21e:	3f 91       	pop	r19
     220:	2f 91       	pop	r18
     222:	0f 90       	pop	r0
     224:	0f be       	out	0x3f, r0	; 63
     226:	0f 90       	pop	r0
     228:	1f 90       	pop	r1
     22a:	18 95       	reti

0000022c <__vector_7>:

// reset routine for message reception
ISR(TIMER2_COMPA_vect) { // timer2 interrupt routine
     22c:	1f 92       	push	r1
     22e:	0f 92       	push	r0
     230:	0f b6       	in	r0, 0x3f	; 63
     232:	0f 92       	push	r0
     234:	11 24       	eor	r1, r1

	rcving = 0;
     236:	10 92 10 01 	sts	0x0110, r1
	rcvd = 0;
     23a:	10 92 11 01 	sts	0x0111, r1
	//PORTB &= ~(1<<PORTB0);
	PORTB &= ~(1<<PORTB1);
     23e:	29 98       	cbi	0x05, 1	; 5

}
     240:	0f 90       	pop	r0
     242:	0f be       	out	0x3f, r0	; 63
     244:	0f 90       	pop	r0
     246:	1f 90       	pop	r1
     248:	18 95       	reti

0000024a <__vector_14>:

// routine for timer0 to send messages, pause for a longer time between messages
ISR(TIMER0_COMPA_vect) { // timer0 interrupt routine
     24a:	1f 92       	push	r1
     24c:	0f 92       	push	r0
     24e:	0f b6       	in	r0, 0x3f	; 63
     250:	0f 92       	push	r0
     252:	11 24       	eor	r1, r1
     254:	2f 93       	push	r18
     256:	3f 93       	push	r19
     258:	4f 93       	push	r20
     25a:	5f 93       	push	r21
     25c:	6f 93       	push	r22
     25e:	7f 93       	push	r23
     260:	8f 93       	push	r24
     262:	9f 93       	push	r25
     264:	ef 93       	push	r30
     266:	ff 93       	push	r31

	if (bits_sent<8) { // if the whole message has not been sent
     268:	80 91 0a 01 	lds	r24, 0x010A
     26c:	90 91 0b 01 	lds	r25, 0x010B
     270:	08 97       	sbiw	r24, 0x08	; 8
     272:	0c f0       	brlt	.+2      	; 0x276 <__vector_14+0x2c>
     274:	40 c0       	rjmp	.+128    	; 0x2f6 <__vector_14+0xac>
		if (pause==0) { // 0,1 half of bit to be sent
     276:	80 91 0c 01 	lds	r24, 0x010C
     27a:	90 91 0d 01 	lds	r25, 0x010D
     27e:	89 2b       	or	r24, r25
     280:	a1 f5       	brne	.+104    	; 0x2ea <__vector_14+0xa0>
			new_bit = (toSend & (1<<(7-bits_sent))) >> (7-bits_sent);
     282:	40 91 00 01 	lds	r20, 0x0100
     286:	80 91 0a 01 	lds	r24, 0x010A
     28a:	90 91 0b 01 	lds	r25, 0x010B
     28e:	e0 91 0a 01 	lds	r30, 0x010A
     292:	f0 91 0b 01 	lds	r31, 0x010B
     296:	27 e0       	ldi	r18, 0x07	; 7
     298:	30 e0       	ldi	r19, 0x00	; 0
     29a:	b9 01       	movw	r22, r18
     29c:	68 1b       	sub	r22, r24
     29e:	79 0b       	sbc	r23, r25
     2a0:	81 e0       	ldi	r24, 0x01	; 1
     2a2:	90 e0       	ldi	r25, 0x00	; 0
     2a4:	02 c0       	rjmp	.+4      	; 0x2aa <__vector_14+0x60>
     2a6:	88 0f       	add	r24, r24
     2a8:	99 1f       	adc	r25, r25
     2aa:	6a 95       	dec	r22
     2ac:	e2 f7       	brpl	.-8      	; 0x2a6 <__vector_14+0x5c>
     2ae:	50 e0       	ldi	r21, 0x00	; 0
     2b0:	84 23       	and	r24, r20
     2b2:	95 23       	and	r25, r21
     2b4:	2e 1b       	sub	r18, r30
     2b6:	3f 0b       	sbc	r19, r31
     2b8:	02 c0       	rjmp	.+4      	; 0x2be <__vector_14+0x74>
     2ba:	95 95       	asr	r25
     2bc:	87 95       	ror	r24
     2be:	2a 95       	dec	r18
     2c0:	e2 f7       	brpl	.-8      	; 0x2ba <__vector_14+0x70>
     2c2:	90 93 0f 01 	sts	0x010F, r25
     2c6:	80 93 0e 01 	sts	0x010E, r24
			if(new_bit==1) { // turn on LEDs
     2ca:	80 91 0e 01 	lds	r24, 0x010E
     2ce:	90 91 0f 01 	lds	r25, 0x010F
     2d2:	01 97       	sbiw	r24, 0x01	; 1
     2d4:	11 f4       	brne	.+4      	; 0x2da <__vector_14+0x90>
				PORTC |= (1<<PORTC3);
     2d6:	43 9a       	sbi	0x08, 3	; 8
     2d8:	01 c0       	rjmp	.+2      	; 0x2dc <__vector_14+0x92>
				//PORTB |= (1<<PORTB2);
			} else { // turn off LEDs
				PORTC &= ~(1<<PORTC3);
     2da:	43 98       	cbi	0x08, 3	; 8
				//PORTB &= ~(1<<PORTB2);
			}
			pause = 1; // pause after sending a bit
     2dc:	81 e0       	ldi	r24, 0x01	; 1
     2de:	90 e0       	ldi	r25, 0x00	; 0
     2e0:	90 93 0d 01 	sts	0x010D, r25
     2e4:	80 93 0c 01 	sts	0x010C, r24
     2e8:	1a c0       	rjmp	.+52     	; 0x31e <__vector_14+0xd4>
		} else { // pausing between bits
			pause = 0; // send new bit on next interrupt
     2ea:	10 92 0d 01 	sts	0x010D, r1
     2ee:	10 92 0c 01 	sts	0x010C, r1
			PORTC &= ~(1<<PORTC3); // ensure LEDs are low for pause
     2f2:	43 98       	cbi	0x08, 3	; 8
     2f4:	0b c0       	rjmp	.+22     	; 0x30c <__vector_14+0xc2>
			//PORTB &= ~(1<<PORTB2);
			bits_sent += 1; // increment bits_sent after each pause
		}
	} else { // if bits_sent >= 8, reset variables and pause for a bit
		if (bits_sent>=40) { // wait for 2 messages, send again
     2f6:	80 91 0a 01 	lds	r24, 0x010A
     2fa:	90 91 0b 01 	lds	r25, 0x010B
     2fe:	88 97       	sbiw	r24, 0x28	; 40
     300:	2c f0       	brlt	.+10     	; 0x30c <__vector_14+0xc2>
			bits_sent = 0; 
     302:	10 92 0b 01 	sts	0x010B, r1
     306:	10 92 0a 01 	sts	0x010A, r1
     30a:	09 c0       	rjmp	.+18     	; 0x31e <__vector_14+0xd4>
		} else {
			bits_sent+=1; // increment bits_sent for timing between messages
     30c:	80 91 0a 01 	lds	r24, 0x010A
     310:	90 91 0b 01 	lds	r25, 0x010B
     314:	01 96       	adiw	r24, 0x01	; 1
     316:	90 93 0b 01 	sts	0x010B, r25
     31a:	80 93 0a 01 	sts	0x010A, r24
		}
		
		// TODO: could disable ISR here, for send_msg function?
	}

}
     31e:	ff 91       	pop	r31
     320:	ef 91       	pop	r30
     322:	9f 91       	pop	r25
     324:	8f 91       	pop	r24
     326:	7f 91       	pop	r23
     328:	6f 91       	pop	r22
     32a:	5f 91       	pop	r21
     32c:	4f 91       	pop	r20
     32e:	3f 91       	pop	r19
     330:	2f 91       	pop	r18
     332:	0f 90       	pop	r0
     334:	0f be       	out	0x3f, r0	; 63
     336:	0f 90       	pop	r0
     338:	1f 90       	pop	r1
     33a:	18 95       	reti

0000033c <detach>:

// "move" by detaching magnet for a specified time in ms
void detach(double time) {
     33c:	af 92       	push	r10
     33e:	bf 92       	push	r11
     340:	cf 92       	push	r12
     342:	df 92       	push	r13
     344:	ef 92       	push	r14
     346:	ff 92       	push	r15
     348:	0f 93       	push	r16
     34a:	1f 93       	push	r17
     34c:	5b 01       	movw	r10, r22
     34e:	6c 01       	movw	r12, r24

	//switch E.P.M. direction 1 (detach)
	PORTB |= (1<<PORTB0); // set inner LED, indicating direction 1
     350:	28 9a       	sbi	0x05, 0	; 5
	PORTB |= (1<<6);//activate E.P.M direction 1
     352:	2e 9a       	sbi	0x05, 6	; 5
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     354:	80 ef       	ldi	r24, 0xF0	; 240
     356:	90 e0       	ldi	r25, 0x00	; 0
     358:	01 97       	sbiw	r24, 0x01	; 1
     35a:	f1 f7       	brne	.-4      	; 0x358 <detach+0x1c>
	_delay_us(120);//leave on for 120us
	PORTB &=~(1<<6);//deactivate E.P.M
     35c:	2e 98       	cbi	0x05, 6	; 5
	PORTB &=~(1<<7);//deactivate E.P.M
     35e:	2f 98       	cbi	0x05, 7	; 5
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     360:	c6 01       	movw	r24, r12
     362:	b5 01       	movw	r22, r10
     364:	20 e0       	ldi	r18, 0x00	; 0
     366:	30 e0       	ldi	r19, 0x00	; 0
     368:	4a ef       	ldi	r20, 0xFA	; 250
     36a:	54 e4       	ldi	r21, 0x44	; 68
     36c:	0e 94 aa 04 	call	0x954	; 0x954 <__mulsf3>
     370:	7b 01       	movw	r14, r22
     372:	8c 01       	movw	r16, r24
	if (__tmp < 1.0)
     374:	20 e0       	ldi	r18, 0x00	; 0
     376:	30 e0       	ldi	r19, 0x00	; 0
     378:	40 e8       	ldi	r20, 0x80	; 128
     37a:	5f e3       	ldi	r21, 0x3F	; 63
     37c:	0e 94 04 06 	call	0xc08	; 0xc08 <__ltsf2>
     380:	88 23       	and	r24, r24
     382:	1c f4       	brge	.+6      	; 0x38a <detach+0x4e>
     384:	61 e0       	ldi	r22, 0x01	; 1
     386:	70 e0       	ldi	r23, 0x00	; 0
     388:	24 c0       	rjmp	.+72     	; 0x3d2 <detach+0x96>
		__ticks = 1;
	else if (__tmp > 65535)
     38a:	c8 01       	movw	r24, r16
     38c:	b7 01       	movw	r22, r14
     38e:	20 e0       	ldi	r18, 0x00	; 0
     390:	3f ef       	ldi	r19, 0xFF	; 255
     392:	4f e7       	ldi	r20, 0x7F	; 127
     394:	57 e4       	ldi	r21, 0x47	; 71
     396:	0e 94 a4 05 	call	0xb48	; 0xb48 <__gtsf2>
     39a:	18 16       	cp	r1, r24
     39c:	b4 f4       	brge	.+44     	; 0x3ca <detach+0x8e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     39e:	c6 01       	movw	r24, r12
     3a0:	b5 01       	movw	r22, r10
     3a2:	20 e0       	ldi	r18, 0x00	; 0
     3a4:	30 e0       	ldi	r19, 0x00	; 0
     3a6:	40 e2       	ldi	r20, 0x20	; 32
     3a8:	51 e4       	ldi	r21, 0x41	; 65
     3aa:	0e 94 aa 04 	call	0x954	; 0x954 <__mulsf3>
     3ae:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <__fixunssfsi>
     3b2:	88 ec       	ldi	r24, 0xC8	; 200
     3b4:	90 e0       	ldi	r25, 0x00	; 0
     3b6:	05 c0       	rjmp	.+10     	; 0x3c2 <detach+0x86>
     3b8:	fc 01       	movw	r30, r24
     3ba:	31 97       	sbiw	r30, 0x01	; 1
     3bc:	f1 f7       	brne	.-4      	; 0x3ba <detach+0x7e>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     3be:	61 50       	subi	r22, 0x01	; 1
     3c0:	70 40       	sbci	r23, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     3c2:	61 15       	cp	r22, r1
     3c4:	71 05       	cpc	r23, r1
     3c6:	c1 f7       	brne	.-16     	; 0x3b8 <detach+0x7c>
     3c8:	07 c0       	rjmp	.+14     	; 0x3d8 <detach+0x9c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     3ca:	c8 01       	movw	r24, r16
     3cc:	b7 01       	movw	r22, r14
     3ce:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <__fixunssfsi>
     3d2:	cb 01       	movw	r24, r22
     3d4:	01 97       	sbiw	r24, 0x01	; 1
     3d6:	f1 f7       	brne	.-4      	; 0x3d4 <detach+0x98>

	_delay_ms(time); // stay detached for desired time

	//switch E.P.M. direction 2 (re-attach)
	PORTB &= ~(1<<PORTB0); // clear inner LED, indicating direction 2
     3d8:	28 98       	cbi	0x05, 0	; 5
	PORTB |= (1<<7);//activate E.P.M direction 2
     3da:	2f 9a       	sbi	0x05, 7	; 5
     3dc:	80 ef       	ldi	r24, 0xF0	; 240
     3de:	90 e0       	ldi	r25, 0x00	; 0
     3e0:	01 97       	sbiw	r24, 0x01	; 1
     3e2:	f1 f7       	brne	.-4      	; 0x3e0 <detach+0xa4>
	_delay_us(120);//leave on for 120us
	PORTB &=~(1<<6);//deactivate E.P.M
     3e4:	2e 98       	cbi	0x05, 6	; 5
	PORTB &=~(1<<7);//deactivate E.P.M
     3e6:	2f 98       	cbi	0x05, 7	; 5

	return;
}
     3e8:	1f 91       	pop	r17
     3ea:	0f 91       	pop	r16
     3ec:	ff 90       	pop	r15
     3ee:	ef 90       	pop	r14
     3f0:	df 90       	pop	r13
     3f2:	cf 90       	pop	r12
     3f4:	bf 90       	pop	r11
     3f6:	af 90       	pop	r10
     3f8:	08 95       	ret

000003fa <main>:

static volatile int rcv_time = 0; // neighbor marking variables
static volatile int near = 0;
static volatile int far = 0;

int main(void) {
     3fa:	0f 93       	push	r16
     3fc:	1f 93       	push	r17
     3fe:	cf 93       	push	r28
     400:	df 93       	push	r29

	DDRB=0;
     402:	14 b8       	out	0x04, r1	; 4
	PORTB=0;
     404:	15 b8       	out	0x05, r1	; 5
	DDRB = (1<<DDB0) | (1<<DDB1) | (1<<DDB2); // enable debugging LEDs
     406:	87 e0       	ldi	r24, 0x07	; 7
     408:	84 b9       	out	0x04, r24	; 4
	DDRB |= (1<<7); // enable EPM pins
     40a:	27 9a       	sbi	0x04, 7	; 4
	DDRB |= (1<<6);
     40c:	26 9a       	sbi	0x04, 6	; 4
	PORTB &=~(1<<6);
     40e:	2e 98       	cbi	0x05, 6	; 5
	PORTB &=~(1<<7);
     410:	2f 98       	cbi	0x05, 7	; 5

	DDRC=0; // enable IR LED
     412:	17 b8       	out	0x07, r1	; 7
	PORTC=0;
     414:	18 b8       	out	0x08, r1	; 8
	DDRC = (1<<DDC3);
     416:	88 e0       	ldi	r24, 0x08	; 8
     418:	87 b9       	out	0x07, r24	; 7

	cli(); // disable interrupts
     41a:	f8 94       	cli

	// Initialize analog compare pins
    DIDR1 = (1<<AIN1D) | (1<<AIN0D); // Disable the digital input buffers
     41c:	83 e0       	ldi	r24, 0x03	; 3
     41e:	80 93 7f 00 	sts	0x007F, r24
    ACSR = (1<<ACIE) | (1<<ACIS1) | (1<<ACIS0); // Setup the comparator: enable interrupt, interrupt on rising edge
     422:	8b e0       	ldi	r24, 0x0B	; 11
     424:	80 bf       	out	0x30, r24	; 48

	// Initialize timer0 for timing sending of messages (1/8 prescaler, 8-bit timer rolls over at ~3.9 kHz Hz)
	TCCR0A |= (1<<WGM01); // // do not change any output pin, clear at compare match with OCR0A
     426:	84 b5       	in	r24, 0x24	; 36
     428:	82 60       	ori	r24, 0x02	; 2
     42a:	84 bd       	out	0x24, r24	; 36
	TCCR0B |= (0<<CS02)|(1<<CS01)|(0<<CS00); // prescaler of 1/8
     42c:	85 b5       	in	r24, 0x25	; 37
     42e:	82 60       	ori	r24, 0x02	; 2
     430:	85 bd       	out	0x25, r24	; 37
	OCR0A = 100; // interrupt every 100 counts, for sending a new bit every 2 cycles
     432:	84 e6       	ldi	r24, 0x64	; 100
     434:	87 bd       	out	0x27, r24	; 39
	TIMSK0 |= (1<<OCIE0A);
     436:	80 91 6e 00 	lds	r24, 0x006E
     43a:	82 60       	ori	r24, 0x02	; 2
     43c:	80 93 6e 00 	sts	0x006E, r24

	// Initialize timer1 for neighbor-marking, based on times of received messages
	TCCR1B |= (1<<CS12)|(0<<CS11)|(1<<CS10); // 1/1024 prescaler, counts at ~7.8kHz, 16-bit timer
     440:	80 91 81 00 	lds	r24, 0x0081
     444:	85 60       	ori	r24, 0x05	; 5
     446:	80 93 81 00 	sts	0x0081, r24

	// Initialize timer2 for timing receiving of messages (1/128 prescaler, 8-bit timer rolls over at ~250 Hz )
	TCCR2A |= (1<<WGM21); // do not change any output pin, clear at compare match with OCR2A
     44a:	80 91 b0 00 	lds	r24, 0x00B0
     44e:	82 60       	ori	r24, 0x02	; 2
     450:	80 93 b0 00 	sts	0x00B0, r24
	TIMSK2 = (1<<OCIE2A); // compare match on OCR2A
     454:	82 e0       	ldi	r24, 0x02	; 2
     456:	80 93 70 00 	sts	0x0070, r24
    OCR2A = 200; // compare every 200 counts (every 3.2ms, 2x length of message)
     45a:	88 ec       	ldi	r24, 0xC8	; 200
     45c:	80 93 b3 00 	sts	0x00B3, r24
    TCCR2B |= (1<<CS22)|(0<<CS21)|(1<<CS20); // prescaler of 1/128: count every 16us
     460:	80 91 b1 00 	lds	r24, 0x00B1
     464:	85 60       	ori	r24, 0x05	; 5
     466:	80 93 b1 00 	sts	0x00B1, r24

	// test power by turning on LEDs
	PORTB |= (1<<PORTB0); // green
     46a:	28 9a       	sbi	0x05, 0	; 5
	PORTB |= (1<<PORTB1); // yellow
     46c:	29 9a       	sbi	0x05, 1	; 5
	PORTB |= (1<<PORTB2); // red
     46e:	2a 9a       	sbi	0x05, 2	; 5
     470:	80 ed       	ldi	r24, 0xD0	; 208
     472:	97 e0       	ldi	r25, 0x07	; 7
     474:	28 ec       	ldi	r18, 0xC8	; 200
     476:	30 e0       	ldi	r19, 0x00	; 0
     478:	f9 01       	movw	r30, r18
     47a:	31 97       	sbiw	r30, 0x01	; 1
     47c:	f1 f7       	brne	.-4      	; 0x47a <main+0x80>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     47e:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     480:	d9 f7       	brne	.-10     	; 0x478 <main+0x7e>
	
	_delay_ms(200);  

	PORTB &= ~(1<<PORTB0); // turn off LEDs
     482:	28 98       	cbi	0x05, 0	; 5
	PORTB &= ~(1<<PORTB1);
     484:	29 98       	cbi	0x05, 1	; 5
	PORTB &= ~(1<<PORTB2);
     486:	2a 98       	cbi	0x05, 2	; 5
     488:	20 e0       	ldi	r18, 0x00	; 0
     48a:	30 e0       	ldi	r19, 0x00	; 0
     48c:	48 ec       	ldi	r20, 0xC8	; 200
     48e:	50 e0       	ldi	r21, 0x00	; 0
     490:	0a c0       	rjmp	.+20     	; 0x4a6 <main+0xac>
     492:	fa 01       	movw	r30, r20
     494:	31 97       	sbiw	r30, 0x01	; 1
     496:	f1 f7       	brne	.-4      	; 0x494 <main+0x9a>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     498:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     49a:	d9 f7       	brne	.-10     	; 0x492 <main+0x98>
	// wait here for a time (~10s) until all modules are spinning, then blink LEDs again
	int ww=0;
	while (ww<100) {

		_delay_ms(100);
		ww+=1;
     49c:	2f 5f       	subi	r18, 0xFF	; 255
     49e:	3f 4f       	sbci	r19, 0xFF	; 255
	PORTB &= ~(1<<PORTB1);
	PORTB &= ~(1<<PORTB2);

	// wait here for a time (~10s) until all modules are spinning, then blink LEDs again
	int ww=0;
	while (ww<100) {
     4a0:	24 36       	cpi	r18, 0x64	; 100
     4a2:	31 05       	cpc	r19, r1
     4a4:	19 f0       	breq	.+6      	; 0x4ac <main+0xb2>
     4a6:	88 ee       	ldi	r24, 0xE8	; 232
     4a8:	93 e0       	ldi	r25, 0x03	; 3
     4aa:	f3 cf       	rjmp	.-26     	; 0x492 <main+0x98>
		_delay_ms(100);
		ww+=1;

	}

	PORTB |= (1<<PORTB0); // green
     4ac:	28 9a       	sbi	0x05, 0	; 5
	PORTB |= (1<<PORTB1); // yellow
     4ae:	29 9a       	sbi	0x05, 1	; 5
	PORTB |= (1<<PORTB2); // red
     4b0:	2a 9a       	sbi	0x05, 2	; 5
     4b2:	80 ed       	ldi	r24, 0xD0	; 208
     4b4:	97 e0       	ldi	r25, 0x07	; 7
     4b6:	28 ec       	ldi	r18, 0xC8	; 200
     4b8:	30 e0       	ldi	r19, 0x00	; 0
     4ba:	f9 01       	movw	r30, r18
     4bc:	31 97       	sbiw	r30, 0x01	; 1
     4be:	f1 f7       	brne	.-4      	; 0x4bc <main+0xc2>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     4c0:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     4c2:	d9 f7       	brne	.-10     	; 0x4ba <main+0xc0>
	
	_delay_ms(200);  

	PORTB &= ~(1<<PORTB0); // turn off LEDs
     4c4:	28 98       	cbi	0x05, 0	; 5
	PORTB &= ~(1<<PORTB1);
     4c6:	29 98       	cbi	0x05, 1	; 5
	PORTB &= ~(1<<PORTB2);
     4c8:	2a 98       	cbi	0x05, 2	; 5

	sei(); // enable interrupts
     4ca:	78 94       	sei
	// at 140 rpm, period should be about 3344 timer1 counts
	int per = 0;
	int cur_time = 0;
	int detach_time = 0;

	near = 836; // initial guess
     4cc:	84 e4       	ldi	r24, 0x44	; 68
     4ce:	93 e0       	ldi	r25, 0x03	; 3
     4d0:	90 93 1a 01 	sts	0x011A, r25
     4d4:	80 93 19 01 	sts	0x0119, r24
	far = 3*near;
     4d8:	20 91 19 01 	lds	r18, 0x0119
     4dc:	30 91 1a 01 	lds	r19, 0x011A
     4e0:	c9 01       	movw	r24, r18
     4e2:	88 0f       	add	r24, r24
     4e4:	99 1f       	adc	r25, r25
     4e6:	82 0f       	add	r24, r18
     4e8:	93 1f       	adc	r25, r19
     4ea:	90 93 1c 01 	sts	0x011C, r25
     4ee:	80 93 1b 01 	sts	0x011B, r24
     4f2:	00 e0       	ldi	r16, 0x00	; 0
     4f4:	10 e0       	ldi	r17, 0x00	; 0
     4f6:	c0 e0       	ldi	r28, 0x00	; 0
     4f8:	d0 e0       	ldi	r29, 0x00	; 0
	
	while(1) {
		// loop
		// take 10 messages to calculate period
		if ((rcv_sx==1) && (rcv_ct<10)) {
     4fa:	80 91 12 01 	lds	r24, 0x0112
     4fe:	90 91 13 01 	lds	r25, 0x0113
     502:	01 97       	sbiw	r24, 0x01	; 1
     504:	51 f5       	brne	.+84     	; 0x55a <main+0x160>
     506:	80 91 1d 01 	lds	r24, 0x011D
     50a:	8a 30       	cpi	r24, 0x0A	; 10
     50c:	30 f5       	brcc	.+76     	; 0x55a <main+0x160>
			PORTB |= (1<<PORTB2); // turn on LED to indicate calibration
     50e:	2a 9a       	sbi	0x05, 2	; 5
			if (rcv_time>700) {
     510:	80 91 17 01 	lds	r24, 0x0117
     514:	90 91 18 01 	lds	r25, 0x0118
     518:	8d 5b       	subi	r24, 0xBD	; 189
     51a:	92 40       	sbci	r25, 0x02	; 2
     51c:	d4 f0       	brlt	.+52     	; 0x552 <main+0x158>
				per = (per+rcv_time)/2;
     51e:	80 91 17 01 	lds	r24, 0x0117
     522:	90 91 18 01 	lds	r25, 0x0118
     526:	80 0f       	add	r24, r16
     528:	91 1f       	adc	r25, r17
     52a:	62 e0       	ldi	r22, 0x02	; 2
     52c:	70 e0       	ldi	r23, 0x00	; 0
     52e:	0e 94 2e 08 	call	0x105c	; 0x105c <__divmodhi4>
     532:	8b 01       	movw	r16, r22
				if (rcv_ct==9) {
     534:	80 91 1d 01 	lds	r24, 0x011D
     538:	89 30       	cpi	r24, 0x09	; 9
     53a:	31 f4       	brne	.+12     	; 0x548 <main+0x14e>
					detach_time = per/5; // time after receiving a message that it will detach the EPM
     53c:	cb 01       	movw	r24, r22
     53e:	65 e0       	ldi	r22, 0x05	; 5
     540:	70 e0       	ldi	r23, 0x00	; 0
     542:	0e 94 2e 08 	call	0x105c	; 0x105c <__divmodhi4>
     546:	eb 01       	movw	r28, r22
				}
				rcv_ct+=1;
     548:	80 91 1d 01 	lds	r24, 0x011D
     54c:	8f 5f       	subi	r24, 0xFF	; 255
     54e:	80 93 1d 01 	sts	0x011D, r24
			}
			rcv_sx=0;
     552:	10 92 13 01 	sts	0x0113, r1
     556:	10 92 12 01 	sts	0x0112, r1
		}

		
		if ((rcv_sx==1) && (rcv_ct==10)) { // got a new message
     55a:	80 91 12 01 	lds	r24, 0x0112
     55e:	90 91 13 01 	lds	r25, 0x0113
     562:	01 97       	sbiw	r24, 0x01	; 1
     564:	51 f6       	brne	.-108    	; 0x4fa <main+0x100>
     566:	80 91 1d 01 	lds	r24, 0x011D
     56a:	8a 30       	cpi	r24, 0x0A	; 10
     56c:	31 f6       	brne	.-116    	; 0x4fa <main+0x100>
			PORTB &= ~(1<<PORTB2); // clear LED to indicate end of calibration
     56e:	2a 98       	cbi	0x05, 2	; 5
			if(lastRcv==beaconID) { // if the beacon is sensed
     570:	90 91 16 01 	lds	r25, 0x0116
     574:	80 91 01 01 	lds	r24, 0x0101
     578:	98 17       	cp	r25, r24
     57a:	09 f0       	breq	.+2      	; 0x57e <main+0x184>
     57c:	be cf       	rjmp	.-132    	; 0x4fa <main+0x100>
				// if the weight is perpendicular to the desired line of motion, detach
				cur_time = 0;
				cur_time |= TCNT1;
     57e:	20 91 84 00 	lds	r18, 0x0084
     582:	30 91 85 00 	lds	r19, 0x0085
				if ( (cur_time<detach_time)&(cur_time>detach_time-20) ) { // within a small window of the detach time
     586:	2c 17       	cp	r18, r28
     588:	3d 07       	cpc	r19, r29
     58a:	0c f0       	brlt	.+2      	; 0x58e <main+0x194>
     58c:	b6 cf       	rjmp	.-148    	; 0x4fa <main+0x100>
     58e:	ce 01       	movw	r24, r28
     590:	43 97       	sbiw	r24, 0x13	; 19
     592:	28 17       	cp	r18, r24
     594:	39 07       	cpc	r19, r25
     596:	0c f4       	brge	.+2      	; 0x59a <main+0x1a0>
     598:	b0 cf       	rjmp	.-160    	; 0x4fa <main+0x100>
						
					detach(100);
     59a:	60 e0       	ldi	r22, 0x00	; 0
     59c:	70 e0       	ldi	r23, 0x00	; 0
     59e:	88 ec       	ldi	r24, 0xC8	; 200
     5a0:	92 e4       	ldi	r25, 0x42	; 66
     5a2:	0e 94 9e 01 	call	0x33c	; 0x33c <detach>
     5a6:	a9 cf       	rjmp	.-174    	; 0x4fa <main+0x100>

000005a8 <__fixunssfsi>:
     5a8:	ef 92       	push	r14
     5aa:	ff 92       	push	r15
     5ac:	0f 93       	push	r16
     5ae:	1f 93       	push	r17
     5b0:	7b 01       	movw	r14, r22
     5b2:	8c 01       	movw	r16, r24
     5b4:	20 e0       	ldi	r18, 0x00	; 0
     5b6:	30 e0       	ldi	r19, 0x00	; 0
     5b8:	40 e0       	ldi	r20, 0x00	; 0
     5ba:	5f e4       	ldi	r21, 0x4F	; 79
     5bc:	0e 94 d4 05 	call	0xba8	; 0xba8 <__gesf2>
     5c0:	88 23       	and	r24, r24
     5c2:	8c f0       	brlt	.+34     	; 0x5e6 <__fixunssfsi+0x3e>
     5c4:	c8 01       	movw	r24, r16
     5c6:	b7 01       	movw	r22, r14
     5c8:	20 e0       	ldi	r18, 0x00	; 0
     5ca:	30 e0       	ldi	r19, 0x00	; 0
     5cc:	40 e0       	ldi	r20, 0x00	; 0
     5ce:	5f e4       	ldi	r21, 0x4F	; 79
     5d0:	0e 94 4c 04 	call	0x898	; 0x898 <__subsf3>
     5d4:	0e 94 34 06 	call	0xc68	; 0xc68 <__fixsfsi>
     5d8:	9b 01       	movw	r18, r22
     5da:	ac 01       	movw	r20, r24
     5dc:	20 50       	subi	r18, 0x00	; 0
     5de:	30 40       	sbci	r19, 0x00	; 0
     5e0:	40 40       	sbci	r20, 0x00	; 0
     5e2:	50 48       	sbci	r21, 0x80	; 128
     5e4:	06 c0       	rjmp	.+12     	; 0x5f2 <__fixunssfsi+0x4a>
     5e6:	c8 01       	movw	r24, r16
     5e8:	b7 01       	movw	r22, r14
     5ea:	0e 94 34 06 	call	0xc68	; 0xc68 <__fixsfsi>
     5ee:	9b 01       	movw	r18, r22
     5f0:	ac 01       	movw	r20, r24
     5f2:	b9 01       	movw	r22, r18
     5f4:	ca 01       	movw	r24, r20
     5f6:	1f 91       	pop	r17
     5f8:	0f 91       	pop	r16
     5fa:	ff 90       	pop	r15
     5fc:	ef 90       	pop	r14
     5fe:	08 95       	ret

00000600 <_fpadd_parts>:
     600:	a0 e0       	ldi	r26, 0x00	; 0
     602:	b0 e0       	ldi	r27, 0x00	; 0
     604:	e6 e0       	ldi	r30, 0x06	; 6
     606:	f3 e0       	ldi	r31, 0x03	; 3
     608:	0c 94 55 08 	jmp	0x10aa	; 0x10aa <__prologue_saves__>
     60c:	dc 01       	movw	r26, r24
     60e:	2b 01       	movw	r4, r22
     610:	fa 01       	movw	r30, r20
     612:	9c 91       	ld	r25, X
     614:	92 30       	cpi	r25, 0x02	; 2
     616:	08 f4       	brcc	.+2      	; 0x61a <_fpadd_parts+0x1a>
     618:	39 c1       	rjmp	.+626    	; 0x88c <_fpadd_parts+0x28c>
     61a:	eb 01       	movw	r28, r22
     61c:	88 81       	ld	r24, Y
     61e:	82 30       	cpi	r24, 0x02	; 2
     620:	08 f4       	brcc	.+2      	; 0x624 <_fpadd_parts+0x24>
     622:	33 c1       	rjmp	.+614    	; 0x88a <_fpadd_parts+0x28a>
     624:	94 30       	cpi	r25, 0x04	; 4
     626:	69 f4       	brne	.+26     	; 0x642 <_fpadd_parts+0x42>
     628:	84 30       	cpi	r24, 0x04	; 4
     62a:	09 f0       	breq	.+2      	; 0x62e <_fpadd_parts+0x2e>
     62c:	2f c1       	rjmp	.+606    	; 0x88c <_fpadd_parts+0x28c>
     62e:	11 96       	adiw	r26, 0x01	; 1
     630:	9c 91       	ld	r25, X
     632:	11 97       	sbiw	r26, 0x01	; 1
     634:	89 81       	ldd	r24, Y+1	; 0x01
     636:	98 17       	cp	r25, r24
     638:	09 f4       	brne	.+2      	; 0x63c <_fpadd_parts+0x3c>
     63a:	28 c1       	rjmp	.+592    	; 0x88c <_fpadd_parts+0x28c>
     63c:	a2 e0       	ldi	r26, 0x02	; 2
     63e:	b1 e0       	ldi	r27, 0x01	; 1
     640:	25 c1       	rjmp	.+586    	; 0x88c <_fpadd_parts+0x28c>
     642:	84 30       	cpi	r24, 0x04	; 4
     644:	09 f4       	brne	.+2      	; 0x648 <_fpadd_parts+0x48>
     646:	21 c1       	rjmp	.+578    	; 0x88a <_fpadd_parts+0x28a>
     648:	82 30       	cpi	r24, 0x02	; 2
     64a:	a9 f4       	brne	.+42     	; 0x676 <_fpadd_parts+0x76>
     64c:	92 30       	cpi	r25, 0x02	; 2
     64e:	09 f0       	breq	.+2      	; 0x652 <_fpadd_parts+0x52>
     650:	1d c1       	rjmp	.+570    	; 0x88c <_fpadd_parts+0x28c>
     652:	9a 01       	movw	r18, r20
     654:	ad 01       	movw	r20, r26
     656:	88 e0       	ldi	r24, 0x08	; 8
     658:	ea 01       	movw	r28, r20
     65a:	09 90       	ld	r0, Y+
     65c:	ae 01       	movw	r20, r28
     65e:	e9 01       	movw	r28, r18
     660:	09 92       	st	Y+, r0
     662:	9e 01       	movw	r18, r28
     664:	81 50       	subi	r24, 0x01	; 1
     666:	c1 f7       	brne	.-16     	; 0x658 <_fpadd_parts+0x58>
     668:	e2 01       	movw	r28, r4
     66a:	89 81       	ldd	r24, Y+1	; 0x01
     66c:	11 96       	adiw	r26, 0x01	; 1
     66e:	9c 91       	ld	r25, X
     670:	89 23       	and	r24, r25
     672:	81 83       	std	Z+1, r24	; 0x01
     674:	08 c1       	rjmp	.+528    	; 0x886 <_fpadd_parts+0x286>
     676:	92 30       	cpi	r25, 0x02	; 2
     678:	09 f4       	brne	.+2      	; 0x67c <_fpadd_parts+0x7c>
     67a:	07 c1       	rjmp	.+526    	; 0x88a <_fpadd_parts+0x28a>
     67c:	12 96       	adiw	r26, 0x02	; 2
     67e:	2d 90       	ld	r2, X+
     680:	3c 90       	ld	r3, X
     682:	13 97       	sbiw	r26, 0x03	; 3
     684:	eb 01       	movw	r28, r22
     686:	8a 81       	ldd	r24, Y+2	; 0x02
     688:	9b 81       	ldd	r25, Y+3	; 0x03
     68a:	14 96       	adiw	r26, 0x04	; 4
     68c:	ad 90       	ld	r10, X+
     68e:	bd 90       	ld	r11, X+
     690:	cd 90       	ld	r12, X+
     692:	dc 90       	ld	r13, X
     694:	17 97       	sbiw	r26, 0x07	; 7
     696:	ec 80       	ldd	r14, Y+4	; 0x04
     698:	fd 80       	ldd	r15, Y+5	; 0x05
     69a:	0e 81       	ldd	r16, Y+6	; 0x06
     69c:	1f 81       	ldd	r17, Y+7	; 0x07
     69e:	91 01       	movw	r18, r2
     6a0:	28 1b       	sub	r18, r24
     6a2:	39 0b       	sbc	r19, r25
     6a4:	b9 01       	movw	r22, r18
     6a6:	37 ff       	sbrs	r19, 7
     6a8:	04 c0       	rjmp	.+8      	; 0x6b2 <_fpadd_parts+0xb2>
     6aa:	66 27       	eor	r22, r22
     6ac:	77 27       	eor	r23, r23
     6ae:	62 1b       	sub	r22, r18
     6b0:	73 0b       	sbc	r23, r19
     6b2:	60 32       	cpi	r22, 0x20	; 32
     6b4:	71 05       	cpc	r23, r1
     6b6:	0c f0       	brlt	.+2      	; 0x6ba <_fpadd_parts+0xba>
     6b8:	61 c0       	rjmp	.+194    	; 0x77c <_fpadd_parts+0x17c>
     6ba:	12 16       	cp	r1, r18
     6bc:	13 06       	cpc	r1, r19
     6be:	6c f5       	brge	.+90     	; 0x71a <_fpadd_parts+0x11a>
     6c0:	37 01       	movw	r6, r14
     6c2:	48 01       	movw	r8, r16
     6c4:	06 2e       	mov	r0, r22
     6c6:	04 c0       	rjmp	.+8      	; 0x6d0 <_fpadd_parts+0xd0>
     6c8:	96 94       	lsr	r9
     6ca:	87 94       	ror	r8
     6cc:	77 94       	ror	r7
     6ce:	67 94       	ror	r6
     6d0:	0a 94       	dec	r0
     6d2:	d2 f7       	brpl	.-12     	; 0x6c8 <_fpadd_parts+0xc8>
     6d4:	21 e0       	ldi	r18, 0x01	; 1
     6d6:	30 e0       	ldi	r19, 0x00	; 0
     6d8:	40 e0       	ldi	r20, 0x00	; 0
     6da:	50 e0       	ldi	r21, 0x00	; 0
     6dc:	04 c0       	rjmp	.+8      	; 0x6e6 <_fpadd_parts+0xe6>
     6de:	22 0f       	add	r18, r18
     6e0:	33 1f       	adc	r19, r19
     6e2:	44 1f       	adc	r20, r20
     6e4:	55 1f       	adc	r21, r21
     6e6:	6a 95       	dec	r22
     6e8:	d2 f7       	brpl	.-12     	; 0x6de <_fpadd_parts+0xde>
     6ea:	21 50       	subi	r18, 0x01	; 1
     6ec:	30 40       	sbci	r19, 0x00	; 0
     6ee:	40 40       	sbci	r20, 0x00	; 0
     6f0:	50 40       	sbci	r21, 0x00	; 0
     6f2:	2e 21       	and	r18, r14
     6f4:	3f 21       	and	r19, r15
     6f6:	40 23       	and	r20, r16
     6f8:	51 23       	and	r21, r17
     6fa:	21 15       	cp	r18, r1
     6fc:	31 05       	cpc	r19, r1
     6fe:	41 05       	cpc	r20, r1
     700:	51 05       	cpc	r21, r1
     702:	21 f0       	breq	.+8      	; 0x70c <_fpadd_parts+0x10c>
     704:	21 e0       	ldi	r18, 0x01	; 1
     706:	30 e0       	ldi	r19, 0x00	; 0
     708:	40 e0       	ldi	r20, 0x00	; 0
     70a:	50 e0       	ldi	r21, 0x00	; 0
     70c:	79 01       	movw	r14, r18
     70e:	8a 01       	movw	r16, r20
     710:	e6 28       	or	r14, r6
     712:	f7 28       	or	r15, r7
     714:	08 29       	or	r16, r8
     716:	19 29       	or	r17, r9
     718:	3c c0       	rjmp	.+120    	; 0x792 <_fpadd_parts+0x192>
     71a:	23 2b       	or	r18, r19
     71c:	d1 f1       	breq	.+116    	; 0x792 <_fpadd_parts+0x192>
     71e:	26 0e       	add	r2, r22
     720:	37 1e       	adc	r3, r23
     722:	35 01       	movw	r6, r10
     724:	46 01       	movw	r8, r12
     726:	06 2e       	mov	r0, r22
     728:	04 c0       	rjmp	.+8      	; 0x732 <_fpadd_parts+0x132>
     72a:	96 94       	lsr	r9
     72c:	87 94       	ror	r8
     72e:	77 94       	ror	r7
     730:	67 94       	ror	r6
     732:	0a 94       	dec	r0
     734:	d2 f7       	brpl	.-12     	; 0x72a <_fpadd_parts+0x12a>
     736:	21 e0       	ldi	r18, 0x01	; 1
     738:	30 e0       	ldi	r19, 0x00	; 0
     73a:	40 e0       	ldi	r20, 0x00	; 0
     73c:	50 e0       	ldi	r21, 0x00	; 0
     73e:	04 c0       	rjmp	.+8      	; 0x748 <_fpadd_parts+0x148>
     740:	22 0f       	add	r18, r18
     742:	33 1f       	adc	r19, r19
     744:	44 1f       	adc	r20, r20
     746:	55 1f       	adc	r21, r21
     748:	6a 95       	dec	r22
     74a:	d2 f7       	brpl	.-12     	; 0x740 <_fpadd_parts+0x140>
     74c:	21 50       	subi	r18, 0x01	; 1
     74e:	30 40       	sbci	r19, 0x00	; 0
     750:	40 40       	sbci	r20, 0x00	; 0
     752:	50 40       	sbci	r21, 0x00	; 0
     754:	2a 21       	and	r18, r10
     756:	3b 21       	and	r19, r11
     758:	4c 21       	and	r20, r12
     75a:	5d 21       	and	r21, r13
     75c:	21 15       	cp	r18, r1
     75e:	31 05       	cpc	r19, r1
     760:	41 05       	cpc	r20, r1
     762:	51 05       	cpc	r21, r1
     764:	21 f0       	breq	.+8      	; 0x76e <_fpadd_parts+0x16e>
     766:	21 e0       	ldi	r18, 0x01	; 1
     768:	30 e0       	ldi	r19, 0x00	; 0
     76a:	40 e0       	ldi	r20, 0x00	; 0
     76c:	50 e0       	ldi	r21, 0x00	; 0
     76e:	59 01       	movw	r10, r18
     770:	6a 01       	movw	r12, r20
     772:	a6 28       	or	r10, r6
     774:	b7 28       	or	r11, r7
     776:	c8 28       	or	r12, r8
     778:	d9 28       	or	r13, r9
     77a:	0b c0       	rjmp	.+22     	; 0x792 <_fpadd_parts+0x192>
     77c:	82 15       	cp	r24, r2
     77e:	93 05       	cpc	r25, r3
     780:	2c f0       	brlt	.+10     	; 0x78c <_fpadd_parts+0x18c>
     782:	1c 01       	movw	r2, r24
     784:	aa 24       	eor	r10, r10
     786:	bb 24       	eor	r11, r11
     788:	65 01       	movw	r12, r10
     78a:	03 c0       	rjmp	.+6      	; 0x792 <_fpadd_parts+0x192>
     78c:	ee 24       	eor	r14, r14
     78e:	ff 24       	eor	r15, r15
     790:	87 01       	movw	r16, r14
     792:	11 96       	adiw	r26, 0x01	; 1
     794:	9c 91       	ld	r25, X
     796:	d2 01       	movw	r26, r4
     798:	11 96       	adiw	r26, 0x01	; 1
     79a:	8c 91       	ld	r24, X
     79c:	98 17       	cp	r25, r24
     79e:	09 f4       	brne	.+2      	; 0x7a2 <_fpadd_parts+0x1a2>
     7a0:	45 c0       	rjmp	.+138    	; 0x82c <_fpadd_parts+0x22c>
     7a2:	99 23       	and	r25, r25
     7a4:	39 f0       	breq	.+14     	; 0x7b4 <_fpadd_parts+0x1b4>
     7a6:	a8 01       	movw	r20, r16
     7a8:	97 01       	movw	r18, r14
     7aa:	2a 19       	sub	r18, r10
     7ac:	3b 09       	sbc	r19, r11
     7ae:	4c 09       	sbc	r20, r12
     7b0:	5d 09       	sbc	r21, r13
     7b2:	06 c0       	rjmp	.+12     	; 0x7c0 <_fpadd_parts+0x1c0>
     7b4:	a6 01       	movw	r20, r12
     7b6:	95 01       	movw	r18, r10
     7b8:	2e 19       	sub	r18, r14
     7ba:	3f 09       	sbc	r19, r15
     7bc:	40 0b       	sbc	r20, r16
     7be:	51 0b       	sbc	r21, r17
     7c0:	57 fd       	sbrc	r21, 7
     7c2:	08 c0       	rjmp	.+16     	; 0x7d4 <_fpadd_parts+0x1d4>
     7c4:	11 82       	std	Z+1, r1	; 0x01
     7c6:	33 82       	std	Z+3, r3	; 0x03
     7c8:	22 82       	std	Z+2, r2	; 0x02
     7ca:	24 83       	std	Z+4, r18	; 0x04
     7cc:	35 83       	std	Z+5, r19	; 0x05
     7ce:	46 83       	std	Z+6, r20	; 0x06
     7d0:	57 83       	std	Z+7, r21	; 0x07
     7d2:	1d c0       	rjmp	.+58     	; 0x80e <_fpadd_parts+0x20e>
     7d4:	81 e0       	ldi	r24, 0x01	; 1
     7d6:	81 83       	std	Z+1, r24	; 0x01
     7d8:	33 82       	std	Z+3, r3	; 0x03
     7da:	22 82       	std	Z+2, r2	; 0x02
     7dc:	88 27       	eor	r24, r24
     7de:	99 27       	eor	r25, r25
     7e0:	dc 01       	movw	r26, r24
     7e2:	82 1b       	sub	r24, r18
     7e4:	93 0b       	sbc	r25, r19
     7e6:	a4 0b       	sbc	r26, r20
     7e8:	b5 0b       	sbc	r27, r21
     7ea:	84 83       	std	Z+4, r24	; 0x04
     7ec:	95 83       	std	Z+5, r25	; 0x05
     7ee:	a6 83       	std	Z+6, r26	; 0x06
     7f0:	b7 83       	std	Z+7, r27	; 0x07
     7f2:	0d c0       	rjmp	.+26     	; 0x80e <_fpadd_parts+0x20e>
     7f4:	22 0f       	add	r18, r18
     7f6:	33 1f       	adc	r19, r19
     7f8:	44 1f       	adc	r20, r20
     7fa:	55 1f       	adc	r21, r21
     7fc:	24 83       	std	Z+4, r18	; 0x04
     7fe:	35 83       	std	Z+5, r19	; 0x05
     800:	46 83       	std	Z+6, r20	; 0x06
     802:	57 83       	std	Z+7, r21	; 0x07
     804:	82 81       	ldd	r24, Z+2	; 0x02
     806:	93 81       	ldd	r25, Z+3	; 0x03
     808:	01 97       	sbiw	r24, 0x01	; 1
     80a:	93 83       	std	Z+3, r25	; 0x03
     80c:	82 83       	std	Z+2, r24	; 0x02
     80e:	24 81       	ldd	r18, Z+4	; 0x04
     810:	35 81       	ldd	r19, Z+5	; 0x05
     812:	46 81       	ldd	r20, Z+6	; 0x06
     814:	57 81       	ldd	r21, Z+7	; 0x07
     816:	da 01       	movw	r26, r20
     818:	c9 01       	movw	r24, r18
     81a:	01 97       	sbiw	r24, 0x01	; 1
     81c:	a1 09       	sbc	r26, r1
     81e:	b1 09       	sbc	r27, r1
     820:	8f 5f       	subi	r24, 0xFF	; 255
     822:	9f 4f       	sbci	r25, 0xFF	; 255
     824:	af 4f       	sbci	r26, 0xFF	; 255
     826:	bf 43       	sbci	r27, 0x3F	; 63
     828:	28 f3       	brcs	.-54     	; 0x7f4 <_fpadd_parts+0x1f4>
     82a:	0b c0       	rjmp	.+22     	; 0x842 <_fpadd_parts+0x242>
     82c:	91 83       	std	Z+1, r25	; 0x01
     82e:	33 82       	std	Z+3, r3	; 0x03
     830:	22 82       	std	Z+2, r2	; 0x02
     832:	ea 0c       	add	r14, r10
     834:	fb 1c       	adc	r15, r11
     836:	0c 1d       	adc	r16, r12
     838:	1d 1d       	adc	r17, r13
     83a:	e4 82       	std	Z+4, r14	; 0x04
     83c:	f5 82       	std	Z+5, r15	; 0x05
     83e:	06 83       	std	Z+6, r16	; 0x06
     840:	17 83       	std	Z+7, r17	; 0x07
     842:	83 e0       	ldi	r24, 0x03	; 3
     844:	80 83       	st	Z, r24
     846:	24 81       	ldd	r18, Z+4	; 0x04
     848:	35 81       	ldd	r19, Z+5	; 0x05
     84a:	46 81       	ldd	r20, Z+6	; 0x06
     84c:	57 81       	ldd	r21, Z+7	; 0x07
     84e:	57 ff       	sbrs	r21, 7
     850:	1a c0       	rjmp	.+52     	; 0x886 <_fpadd_parts+0x286>
     852:	c9 01       	movw	r24, r18
     854:	aa 27       	eor	r26, r26
     856:	97 fd       	sbrc	r25, 7
     858:	a0 95       	com	r26
     85a:	ba 2f       	mov	r27, r26
     85c:	81 70       	andi	r24, 0x01	; 1
     85e:	90 70       	andi	r25, 0x00	; 0
     860:	a0 70       	andi	r26, 0x00	; 0
     862:	b0 70       	andi	r27, 0x00	; 0
     864:	56 95       	lsr	r21
     866:	47 95       	ror	r20
     868:	37 95       	ror	r19
     86a:	27 95       	ror	r18
     86c:	82 2b       	or	r24, r18
     86e:	93 2b       	or	r25, r19
     870:	a4 2b       	or	r26, r20
     872:	b5 2b       	or	r27, r21
     874:	84 83       	std	Z+4, r24	; 0x04
     876:	95 83       	std	Z+5, r25	; 0x05
     878:	a6 83       	std	Z+6, r26	; 0x06
     87a:	b7 83       	std	Z+7, r27	; 0x07
     87c:	82 81       	ldd	r24, Z+2	; 0x02
     87e:	93 81       	ldd	r25, Z+3	; 0x03
     880:	01 96       	adiw	r24, 0x01	; 1
     882:	93 83       	std	Z+3, r25	; 0x03
     884:	82 83       	std	Z+2, r24	; 0x02
     886:	df 01       	movw	r26, r30
     888:	01 c0       	rjmp	.+2      	; 0x88c <_fpadd_parts+0x28c>
     88a:	d2 01       	movw	r26, r4
     88c:	cd 01       	movw	r24, r26
     88e:	cd b7       	in	r28, 0x3d	; 61
     890:	de b7       	in	r29, 0x3e	; 62
     892:	e2 e1       	ldi	r30, 0x12	; 18
     894:	0c 94 71 08 	jmp	0x10e2	; 0x10e2 <__epilogue_restores__>

00000898 <__subsf3>:
     898:	a0 e2       	ldi	r26, 0x20	; 32
     89a:	b0 e0       	ldi	r27, 0x00	; 0
     89c:	e2 e5       	ldi	r30, 0x52	; 82
     89e:	f4 e0       	ldi	r31, 0x04	; 4
     8a0:	0c 94 61 08 	jmp	0x10c2	; 0x10c2 <__prologue_saves__+0x18>
     8a4:	69 83       	std	Y+1, r22	; 0x01
     8a6:	7a 83       	std	Y+2, r23	; 0x02
     8a8:	8b 83       	std	Y+3, r24	; 0x03
     8aa:	9c 83       	std	Y+4, r25	; 0x04
     8ac:	2d 83       	std	Y+5, r18	; 0x05
     8ae:	3e 83       	std	Y+6, r19	; 0x06
     8b0:	4f 83       	std	Y+7, r20	; 0x07
     8b2:	58 87       	std	Y+8, r21	; 0x08
     8b4:	e9 e0       	ldi	r30, 0x09	; 9
     8b6:	ee 2e       	mov	r14, r30
     8b8:	f1 2c       	mov	r15, r1
     8ba:	ec 0e       	add	r14, r28
     8bc:	fd 1e       	adc	r15, r29
     8be:	ce 01       	movw	r24, r28
     8c0:	01 96       	adiw	r24, 0x01	; 1
     8c2:	b7 01       	movw	r22, r14
     8c4:	0e 94 5d 07 	call	0xeba	; 0xeba <__unpack_f>
     8c8:	8e 01       	movw	r16, r28
     8ca:	0f 5e       	subi	r16, 0xEF	; 239
     8cc:	1f 4f       	sbci	r17, 0xFF	; 255
     8ce:	ce 01       	movw	r24, r28
     8d0:	05 96       	adiw	r24, 0x05	; 5
     8d2:	b8 01       	movw	r22, r16
     8d4:	0e 94 5d 07 	call	0xeba	; 0xeba <__unpack_f>
     8d8:	8a 89       	ldd	r24, Y+18	; 0x12
     8da:	91 e0       	ldi	r25, 0x01	; 1
     8dc:	89 27       	eor	r24, r25
     8de:	8a 8b       	std	Y+18, r24	; 0x12
     8e0:	c7 01       	movw	r24, r14
     8e2:	b8 01       	movw	r22, r16
     8e4:	ae 01       	movw	r20, r28
     8e6:	47 5e       	subi	r20, 0xE7	; 231
     8e8:	5f 4f       	sbci	r21, 0xFF	; 255
     8ea:	0e 94 00 03 	call	0x600	; 0x600 <_fpadd_parts>
     8ee:	0e 94 88 06 	call	0xd10	; 0xd10 <__pack_f>
     8f2:	a0 96       	adiw	r28, 0x20	; 32
     8f4:	e6 e0       	ldi	r30, 0x06	; 6
     8f6:	0c 94 7d 08 	jmp	0x10fa	; 0x10fa <__epilogue_restores__+0x18>

000008fa <__addsf3>:
     8fa:	a0 e2       	ldi	r26, 0x20	; 32
     8fc:	b0 e0       	ldi	r27, 0x00	; 0
     8fe:	e3 e8       	ldi	r30, 0x83	; 131
     900:	f4 e0       	ldi	r31, 0x04	; 4
     902:	0c 94 61 08 	jmp	0x10c2	; 0x10c2 <__prologue_saves__+0x18>
     906:	69 83       	std	Y+1, r22	; 0x01
     908:	7a 83       	std	Y+2, r23	; 0x02
     90a:	8b 83       	std	Y+3, r24	; 0x03
     90c:	9c 83       	std	Y+4, r25	; 0x04
     90e:	2d 83       	std	Y+5, r18	; 0x05
     910:	3e 83       	std	Y+6, r19	; 0x06
     912:	4f 83       	std	Y+7, r20	; 0x07
     914:	58 87       	std	Y+8, r21	; 0x08
     916:	f9 e0       	ldi	r31, 0x09	; 9
     918:	ef 2e       	mov	r14, r31
     91a:	f1 2c       	mov	r15, r1
     91c:	ec 0e       	add	r14, r28
     91e:	fd 1e       	adc	r15, r29
     920:	ce 01       	movw	r24, r28
     922:	01 96       	adiw	r24, 0x01	; 1
     924:	b7 01       	movw	r22, r14
     926:	0e 94 5d 07 	call	0xeba	; 0xeba <__unpack_f>
     92a:	8e 01       	movw	r16, r28
     92c:	0f 5e       	subi	r16, 0xEF	; 239
     92e:	1f 4f       	sbci	r17, 0xFF	; 255
     930:	ce 01       	movw	r24, r28
     932:	05 96       	adiw	r24, 0x05	; 5
     934:	b8 01       	movw	r22, r16
     936:	0e 94 5d 07 	call	0xeba	; 0xeba <__unpack_f>
     93a:	c7 01       	movw	r24, r14
     93c:	b8 01       	movw	r22, r16
     93e:	ae 01       	movw	r20, r28
     940:	47 5e       	subi	r20, 0xE7	; 231
     942:	5f 4f       	sbci	r21, 0xFF	; 255
     944:	0e 94 00 03 	call	0x600	; 0x600 <_fpadd_parts>
     948:	0e 94 88 06 	call	0xd10	; 0xd10 <__pack_f>
     94c:	a0 96       	adiw	r28, 0x20	; 32
     94e:	e6 e0       	ldi	r30, 0x06	; 6
     950:	0c 94 7d 08 	jmp	0x10fa	; 0x10fa <__epilogue_restores__+0x18>

00000954 <__mulsf3>:
     954:	a0 e2       	ldi	r26, 0x20	; 32
     956:	b0 e0       	ldi	r27, 0x00	; 0
     958:	e0 eb       	ldi	r30, 0xB0	; 176
     95a:	f4 e0       	ldi	r31, 0x04	; 4
     95c:	0c 94 55 08 	jmp	0x10aa	; 0x10aa <__prologue_saves__>
     960:	69 83       	std	Y+1, r22	; 0x01
     962:	7a 83       	std	Y+2, r23	; 0x02
     964:	8b 83       	std	Y+3, r24	; 0x03
     966:	9c 83       	std	Y+4, r25	; 0x04
     968:	2d 83       	std	Y+5, r18	; 0x05
     96a:	3e 83       	std	Y+6, r19	; 0x06
     96c:	4f 83       	std	Y+7, r20	; 0x07
     96e:	58 87       	std	Y+8, r21	; 0x08
     970:	ce 01       	movw	r24, r28
     972:	01 96       	adiw	r24, 0x01	; 1
     974:	be 01       	movw	r22, r28
     976:	67 5f       	subi	r22, 0xF7	; 247
     978:	7f 4f       	sbci	r23, 0xFF	; 255
     97a:	0e 94 5d 07 	call	0xeba	; 0xeba <__unpack_f>
     97e:	ce 01       	movw	r24, r28
     980:	05 96       	adiw	r24, 0x05	; 5
     982:	be 01       	movw	r22, r28
     984:	6f 5e       	subi	r22, 0xEF	; 239
     986:	7f 4f       	sbci	r23, 0xFF	; 255
     988:	0e 94 5d 07 	call	0xeba	; 0xeba <__unpack_f>
     98c:	99 85       	ldd	r25, Y+9	; 0x09
     98e:	92 30       	cpi	r25, 0x02	; 2
     990:	88 f0       	brcs	.+34     	; 0x9b4 <__mulsf3+0x60>
     992:	89 89       	ldd	r24, Y+17	; 0x11
     994:	82 30       	cpi	r24, 0x02	; 2
     996:	c8 f0       	brcs	.+50     	; 0x9ca <__mulsf3+0x76>
     998:	94 30       	cpi	r25, 0x04	; 4
     99a:	19 f4       	brne	.+6      	; 0x9a2 <__mulsf3+0x4e>
     99c:	82 30       	cpi	r24, 0x02	; 2
     99e:	51 f4       	brne	.+20     	; 0x9b4 <__mulsf3+0x60>
     9a0:	04 c0       	rjmp	.+8      	; 0x9aa <__mulsf3+0x56>
     9a2:	84 30       	cpi	r24, 0x04	; 4
     9a4:	29 f4       	brne	.+10     	; 0x9b0 <__mulsf3+0x5c>
     9a6:	92 30       	cpi	r25, 0x02	; 2
     9a8:	81 f4       	brne	.+32     	; 0x9ca <__mulsf3+0x76>
     9aa:	82 e0       	ldi	r24, 0x02	; 2
     9ac:	91 e0       	ldi	r25, 0x01	; 1
     9ae:	c6 c0       	rjmp	.+396    	; 0xb3c <__mulsf3+0x1e8>
     9b0:	92 30       	cpi	r25, 0x02	; 2
     9b2:	49 f4       	brne	.+18     	; 0x9c6 <__mulsf3+0x72>
     9b4:	20 e0       	ldi	r18, 0x00	; 0
     9b6:	9a 85       	ldd	r25, Y+10	; 0x0a
     9b8:	8a 89       	ldd	r24, Y+18	; 0x12
     9ba:	98 13       	cpse	r25, r24
     9bc:	21 e0       	ldi	r18, 0x01	; 1
     9be:	2a 87       	std	Y+10, r18	; 0x0a
     9c0:	ce 01       	movw	r24, r28
     9c2:	09 96       	adiw	r24, 0x09	; 9
     9c4:	bb c0       	rjmp	.+374    	; 0xb3c <__mulsf3+0x1e8>
     9c6:	82 30       	cpi	r24, 0x02	; 2
     9c8:	49 f4       	brne	.+18     	; 0x9dc <__mulsf3+0x88>
     9ca:	20 e0       	ldi	r18, 0x00	; 0
     9cc:	9a 85       	ldd	r25, Y+10	; 0x0a
     9ce:	8a 89       	ldd	r24, Y+18	; 0x12
     9d0:	98 13       	cpse	r25, r24
     9d2:	21 e0       	ldi	r18, 0x01	; 1
     9d4:	2a 8b       	std	Y+18, r18	; 0x12
     9d6:	ce 01       	movw	r24, r28
     9d8:	41 96       	adiw	r24, 0x11	; 17
     9da:	b0 c0       	rjmp	.+352    	; 0xb3c <__mulsf3+0x1e8>
     9dc:	2d 84       	ldd	r2, Y+13	; 0x0d
     9de:	3e 84       	ldd	r3, Y+14	; 0x0e
     9e0:	4f 84       	ldd	r4, Y+15	; 0x0f
     9e2:	58 88       	ldd	r5, Y+16	; 0x10
     9e4:	6d 88       	ldd	r6, Y+21	; 0x15
     9e6:	7e 88       	ldd	r7, Y+22	; 0x16
     9e8:	8f 88       	ldd	r8, Y+23	; 0x17
     9ea:	98 8c       	ldd	r9, Y+24	; 0x18
     9ec:	ee 24       	eor	r14, r14
     9ee:	ff 24       	eor	r15, r15
     9f0:	87 01       	movw	r16, r14
     9f2:	aa 24       	eor	r10, r10
     9f4:	bb 24       	eor	r11, r11
     9f6:	65 01       	movw	r12, r10
     9f8:	40 e0       	ldi	r20, 0x00	; 0
     9fa:	50 e0       	ldi	r21, 0x00	; 0
     9fc:	60 e0       	ldi	r22, 0x00	; 0
     9fe:	70 e0       	ldi	r23, 0x00	; 0
     a00:	e0 e0       	ldi	r30, 0x00	; 0
     a02:	f0 e0       	ldi	r31, 0x00	; 0
     a04:	c1 01       	movw	r24, r2
     a06:	81 70       	andi	r24, 0x01	; 1
     a08:	90 70       	andi	r25, 0x00	; 0
     a0a:	89 2b       	or	r24, r25
     a0c:	e9 f0       	breq	.+58     	; 0xa48 <__mulsf3+0xf4>
     a0e:	e6 0c       	add	r14, r6
     a10:	f7 1c       	adc	r15, r7
     a12:	08 1d       	adc	r16, r8
     a14:	19 1d       	adc	r17, r9
     a16:	9a 01       	movw	r18, r20
     a18:	ab 01       	movw	r20, r22
     a1a:	2a 0d       	add	r18, r10
     a1c:	3b 1d       	adc	r19, r11
     a1e:	4c 1d       	adc	r20, r12
     a20:	5d 1d       	adc	r21, r13
     a22:	80 e0       	ldi	r24, 0x00	; 0
     a24:	90 e0       	ldi	r25, 0x00	; 0
     a26:	a0 e0       	ldi	r26, 0x00	; 0
     a28:	b0 e0       	ldi	r27, 0x00	; 0
     a2a:	e6 14       	cp	r14, r6
     a2c:	f7 04       	cpc	r15, r7
     a2e:	08 05       	cpc	r16, r8
     a30:	19 05       	cpc	r17, r9
     a32:	20 f4       	brcc	.+8      	; 0xa3c <__mulsf3+0xe8>
     a34:	81 e0       	ldi	r24, 0x01	; 1
     a36:	90 e0       	ldi	r25, 0x00	; 0
     a38:	a0 e0       	ldi	r26, 0x00	; 0
     a3a:	b0 e0       	ldi	r27, 0x00	; 0
     a3c:	ba 01       	movw	r22, r20
     a3e:	a9 01       	movw	r20, r18
     a40:	48 0f       	add	r20, r24
     a42:	59 1f       	adc	r21, r25
     a44:	6a 1f       	adc	r22, r26
     a46:	7b 1f       	adc	r23, r27
     a48:	aa 0c       	add	r10, r10
     a4a:	bb 1c       	adc	r11, r11
     a4c:	cc 1c       	adc	r12, r12
     a4e:	dd 1c       	adc	r13, r13
     a50:	97 fe       	sbrs	r9, 7
     a52:	08 c0       	rjmp	.+16     	; 0xa64 <__mulsf3+0x110>
     a54:	81 e0       	ldi	r24, 0x01	; 1
     a56:	90 e0       	ldi	r25, 0x00	; 0
     a58:	a0 e0       	ldi	r26, 0x00	; 0
     a5a:	b0 e0       	ldi	r27, 0x00	; 0
     a5c:	a8 2a       	or	r10, r24
     a5e:	b9 2a       	or	r11, r25
     a60:	ca 2a       	or	r12, r26
     a62:	db 2a       	or	r13, r27
     a64:	31 96       	adiw	r30, 0x01	; 1
     a66:	e0 32       	cpi	r30, 0x20	; 32
     a68:	f1 05       	cpc	r31, r1
     a6a:	49 f0       	breq	.+18     	; 0xa7e <__mulsf3+0x12a>
     a6c:	66 0c       	add	r6, r6
     a6e:	77 1c       	adc	r7, r7
     a70:	88 1c       	adc	r8, r8
     a72:	99 1c       	adc	r9, r9
     a74:	56 94       	lsr	r5
     a76:	47 94       	ror	r4
     a78:	37 94       	ror	r3
     a7a:	27 94       	ror	r2
     a7c:	c3 cf       	rjmp	.-122    	; 0xa04 <__mulsf3+0xb0>
     a7e:	fa 85       	ldd	r31, Y+10	; 0x0a
     a80:	ea 89       	ldd	r30, Y+18	; 0x12
     a82:	2b 89       	ldd	r18, Y+19	; 0x13
     a84:	3c 89       	ldd	r19, Y+20	; 0x14
     a86:	8b 85       	ldd	r24, Y+11	; 0x0b
     a88:	9c 85       	ldd	r25, Y+12	; 0x0c
     a8a:	28 0f       	add	r18, r24
     a8c:	39 1f       	adc	r19, r25
     a8e:	2e 5f       	subi	r18, 0xFE	; 254
     a90:	3f 4f       	sbci	r19, 0xFF	; 255
     a92:	17 c0       	rjmp	.+46     	; 0xac2 <__mulsf3+0x16e>
     a94:	ca 01       	movw	r24, r20
     a96:	81 70       	andi	r24, 0x01	; 1
     a98:	90 70       	andi	r25, 0x00	; 0
     a9a:	89 2b       	or	r24, r25
     a9c:	61 f0       	breq	.+24     	; 0xab6 <__mulsf3+0x162>
     a9e:	16 95       	lsr	r17
     aa0:	07 95       	ror	r16
     aa2:	f7 94       	ror	r15
     aa4:	e7 94       	ror	r14
     aa6:	80 e0       	ldi	r24, 0x00	; 0
     aa8:	90 e0       	ldi	r25, 0x00	; 0
     aaa:	a0 e0       	ldi	r26, 0x00	; 0
     aac:	b0 e8       	ldi	r27, 0x80	; 128
     aae:	e8 2a       	or	r14, r24
     ab0:	f9 2a       	or	r15, r25
     ab2:	0a 2b       	or	r16, r26
     ab4:	1b 2b       	or	r17, r27
     ab6:	76 95       	lsr	r23
     ab8:	67 95       	ror	r22
     aba:	57 95       	ror	r21
     abc:	47 95       	ror	r20
     abe:	2f 5f       	subi	r18, 0xFF	; 255
     ac0:	3f 4f       	sbci	r19, 0xFF	; 255
     ac2:	77 fd       	sbrc	r23, 7
     ac4:	e7 cf       	rjmp	.-50     	; 0xa94 <__mulsf3+0x140>
     ac6:	0c c0       	rjmp	.+24     	; 0xae0 <__mulsf3+0x18c>
     ac8:	44 0f       	add	r20, r20
     aca:	55 1f       	adc	r21, r21
     acc:	66 1f       	adc	r22, r22
     ace:	77 1f       	adc	r23, r23
     ad0:	17 fd       	sbrc	r17, 7
     ad2:	41 60       	ori	r20, 0x01	; 1
     ad4:	ee 0c       	add	r14, r14
     ad6:	ff 1c       	adc	r15, r15
     ad8:	00 1f       	adc	r16, r16
     ada:	11 1f       	adc	r17, r17
     adc:	21 50       	subi	r18, 0x01	; 1
     ade:	30 40       	sbci	r19, 0x00	; 0
     ae0:	40 30       	cpi	r20, 0x00	; 0
     ae2:	90 e0       	ldi	r25, 0x00	; 0
     ae4:	59 07       	cpc	r21, r25
     ae6:	90 e0       	ldi	r25, 0x00	; 0
     ae8:	69 07       	cpc	r22, r25
     aea:	90 e4       	ldi	r25, 0x40	; 64
     aec:	79 07       	cpc	r23, r25
     aee:	60 f3       	brcs	.-40     	; 0xac8 <__mulsf3+0x174>
     af0:	2b 8f       	std	Y+27, r18	; 0x1b
     af2:	3c 8f       	std	Y+28, r19	; 0x1c
     af4:	db 01       	movw	r26, r22
     af6:	ca 01       	movw	r24, r20
     af8:	8f 77       	andi	r24, 0x7F	; 127
     afa:	90 70       	andi	r25, 0x00	; 0
     afc:	a0 70       	andi	r26, 0x00	; 0
     afe:	b0 70       	andi	r27, 0x00	; 0
     b00:	80 34       	cpi	r24, 0x40	; 64
     b02:	91 05       	cpc	r25, r1
     b04:	a1 05       	cpc	r26, r1
     b06:	b1 05       	cpc	r27, r1
     b08:	61 f4       	brne	.+24     	; 0xb22 <__mulsf3+0x1ce>
     b0a:	47 fd       	sbrc	r20, 7
     b0c:	0a c0       	rjmp	.+20     	; 0xb22 <__mulsf3+0x1ce>
     b0e:	e1 14       	cp	r14, r1
     b10:	f1 04       	cpc	r15, r1
     b12:	01 05       	cpc	r16, r1
     b14:	11 05       	cpc	r17, r1
     b16:	29 f0       	breq	.+10     	; 0xb22 <__mulsf3+0x1ce>
     b18:	40 5c       	subi	r20, 0xC0	; 192
     b1a:	5f 4f       	sbci	r21, 0xFF	; 255
     b1c:	6f 4f       	sbci	r22, 0xFF	; 255
     b1e:	7f 4f       	sbci	r23, 0xFF	; 255
     b20:	40 78       	andi	r20, 0x80	; 128
     b22:	1a 8e       	std	Y+26, r1	; 0x1a
     b24:	fe 17       	cp	r31, r30
     b26:	11 f0       	breq	.+4      	; 0xb2c <__mulsf3+0x1d8>
     b28:	81 e0       	ldi	r24, 0x01	; 1
     b2a:	8a 8f       	std	Y+26, r24	; 0x1a
     b2c:	4d 8f       	std	Y+29, r20	; 0x1d
     b2e:	5e 8f       	std	Y+30, r21	; 0x1e
     b30:	6f 8f       	std	Y+31, r22	; 0x1f
     b32:	78 a3       	std	Y+32, r23	; 0x20
     b34:	83 e0       	ldi	r24, 0x03	; 3
     b36:	89 8f       	std	Y+25, r24	; 0x19
     b38:	ce 01       	movw	r24, r28
     b3a:	49 96       	adiw	r24, 0x19	; 25
     b3c:	0e 94 88 06 	call	0xd10	; 0xd10 <__pack_f>
     b40:	a0 96       	adiw	r28, 0x20	; 32
     b42:	e2 e1       	ldi	r30, 0x12	; 18
     b44:	0c 94 71 08 	jmp	0x10e2	; 0x10e2 <__epilogue_restores__>

00000b48 <__gtsf2>:
     b48:	a8 e1       	ldi	r26, 0x18	; 24
     b4a:	b0 e0       	ldi	r27, 0x00	; 0
     b4c:	ea ea       	ldi	r30, 0xAA	; 170
     b4e:	f5 e0       	ldi	r31, 0x05	; 5
     b50:	0c 94 61 08 	jmp	0x10c2	; 0x10c2 <__prologue_saves__+0x18>
     b54:	69 83       	std	Y+1, r22	; 0x01
     b56:	7a 83       	std	Y+2, r23	; 0x02
     b58:	8b 83       	std	Y+3, r24	; 0x03
     b5a:	9c 83       	std	Y+4, r25	; 0x04
     b5c:	2d 83       	std	Y+5, r18	; 0x05
     b5e:	3e 83       	std	Y+6, r19	; 0x06
     b60:	4f 83       	std	Y+7, r20	; 0x07
     b62:	58 87       	std	Y+8, r21	; 0x08
     b64:	89 e0       	ldi	r24, 0x09	; 9
     b66:	e8 2e       	mov	r14, r24
     b68:	f1 2c       	mov	r15, r1
     b6a:	ec 0e       	add	r14, r28
     b6c:	fd 1e       	adc	r15, r29
     b6e:	ce 01       	movw	r24, r28
     b70:	01 96       	adiw	r24, 0x01	; 1
     b72:	b7 01       	movw	r22, r14
     b74:	0e 94 5d 07 	call	0xeba	; 0xeba <__unpack_f>
     b78:	8e 01       	movw	r16, r28
     b7a:	0f 5e       	subi	r16, 0xEF	; 239
     b7c:	1f 4f       	sbci	r17, 0xFF	; 255
     b7e:	ce 01       	movw	r24, r28
     b80:	05 96       	adiw	r24, 0x05	; 5
     b82:	b8 01       	movw	r22, r16
     b84:	0e 94 5d 07 	call	0xeba	; 0xeba <__unpack_f>
     b88:	89 85       	ldd	r24, Y+9	; 0x09
     b8a:	82 30       	cpi	r24, 0x02	; 2
     b8c:	40 f0       	brcs	.+16     	; 0xb9e <__gtsf2+0x56>
     b8e:	89 89       	ldd	r24, Y+17	; 0x11
     b90:	82 30       	cpi	r24, 0x02	; 2
     b92:	28 f0       	brcs	.+10     	; 0xb9e <__gtsf2+0x56>
     b94:	c7 01       	movw	r24, r14
     b96:	b8 01       	movw	r22, r16
     b98:	0e 94 d5 07 	call	0xfaa	; 0xfaa <__fpcmp_parts_f>
     b9c:	01 c0       	rjmp	.+2      	; 0xba0 <__gtsf2+0x58>
     b9e:	8f ef       	ldi	r24, 0xFF	; 255
     ba0:	68 96       	adiw	r28, 0x18	; 24
     ba2:	e6 e0       	ldi	r30, 0x06	; 6
     ba4:	0c 94 7d 08 	jmp	0x10fa	; 0x10fa <__epilogue_restores__+0x18>

00000ba8 <__gesf2>:
     ba8:	a8 e1       	ldi	r26, 0x18	; 24
     baa:	b0 e0       	ldi	r27, 0x00	; 0
     bac:	ea ed       	ldi	r30, 0xDA	; 218
     bae:	f5 e0       	ldi	r31, 0x05	; 5
     bb0:	0c 94 61 08 	jmp	0x10c2	; 0x10c2 <__prologue_saves__+0x18>
     bb4:	69 83       	std	Y+1, r22	; 0x01
     bb6:	7a 83       	std	Y+2, r23	; 0x02
     bb8:	8b 83       	std	Y+3, r24	; 0x03
     bba:	9c 83       	std	Y+4, r25	; 0x04
     bbc:	2d 83       	std	Y+5, r18	; 0x05
     bbe:	3e 83       	std	Y+6, r19	; 0x06
     bc0:	4f 83       	std	Y+7, r20	; 0x07
     bc2:	58 87       	std	Y+8, r21	; 0x08
     bc4:	89 e0       	ldi	r24, 0x09	; 9
     bc6:	e8 2e       	mov	r14, r24
     bc8:	f1 2c       	mov	r15, r1
     bca:	ec 0e       	add	r14, r28
     bcc:	fd 1e       	adc	r15, r29
     bce:	ce 01       	movw	r24, r28
     bd0:	01 96       	adiw	r24, 0x01	; 1
     bd2:	b7 01       	movw	r22, r14
     bd4:	0e 94 5d 07 	call	0xeba	; 0xeba <__unpack_f>
     bd8:	8e 01       	movw	r16, r28
     bda:	0f 5e       	subi	r16, 0xEF	; 239
     bdc:	1f 4f       	sbci	r17, 0xFF	; 255
     bde:	ce 01       	movw	r24, r28
     be0:	05 96       	adiw	r24, 0x05	; 5
     be2:	b8 01       	movw	r22, r16
     be4:	0e 94 5d 07 	call	0xeba	; 0xeba <__unpack_f>
     be8:	89 85       	ldd	r24, Y+9	; 0x09
     bea:	82 30       	cpi	r24, 0x02	; 2
     bec:	40 f0       	brcs	.+16     	; 0xbfe <__gesf2+0x56>
     bee:	89 89       	ldd	r24, Y+17	; 0x11
     bf0:	82 30       	cpi	r24, 0x02	; 2
     bf2:	28 f0       	brcs	.+10     	; 0xbfe <__gesf2+0x56>
     bf4:	c7 01       	movw	r24, r14
     bf6:	b8 01       	movw	r22, r16
     bf8:	0e 94 d5 07 	call	0xfaa	; 0xfaa <__fpcmp_parts_f>
     bfc:	01 c0       	rjmp	.+2      	; 0xc00 <__gesf2+0x58>
     bfe:	8f ef       	ldi	r24, 0xFF	; 255
     c00:	68 96       	adiw	r28, 0x18	; 24
     c02:	e6 e0       	ldi	r30, 0x06	; 6
     c04:	0c 94 7d 08 	jmp	0x10fa	; 0x10fa <__epilogue_restores__+0x18>

00000c08 <__ltsf2>:
     c08:	a8 e1       	ldi	r26, 0x18	; 24
     c0a:	b0 e0       	ldi	r27, 0x00	; 0
     c0c:	ea e0       	ldi	r30, 0x0A	; 10
     c0e:	f6 e0       	ldi	r31, 0x06	; 6
     c10:	0c 94 61 08 	jmp	0x10c2	; 0x10c2 <__prologue_saves__+0x18>
     c14:	69 83       	std	Y+1, r22	; 0x01
     c16:	7a 83       	std	Y+2, r23	; 0x02
     c18:	8b 83       	std	Y+3, r24	; 0x03
     c1a:	9c 83       	std	Y+4, r25	; 0x04
     c1c:	2d 83       	std	Y+5, r18	; 0x05
     c1e:	3e 83       	std	Y+6, r19	; 0x06
     c20:	4f 83       	std	Y+7, r20	; 0x07
     c22:	58 87       	std	Y+8, r21	; 0x08
     c24:	89 e0       	ldi	r24, 0x09	; 9
     c26:	e8 2e       	mov	r14, r24
     c28:	f1 2c       	mov	r15, r1
     c2a:	ec 0e       	add	r14, r28
     c2c:	fd 1e       	adc	r15, r29
     c2e:	ce 01       	movw	r24, r28
     c30:	01 96       	adiw	r24, 0x01	; 1
     c32:	b7 01       	movw	r22, r14
     c34:	0e 94 5d 07 	call	0xeba	; 0xeba <__unpack_f>
     c38:	8e 01       	movw	r16, r28
     c3a:	0f 5e       	subi	r16, 0xEF	; 239
     c3c:	1f 4f       	sbci	r17, 0xFF	; 255
     c3e:	ce 01       	movw	r24, r28
     c40:	05 96       	adiw	r24, 0x05	; 5
     c42:	b8 01       	movw	r22, r16
     c44:	0e 94 5d 07 	call	0xeba	; 0xeba <__unpack_f>
     c48:	89 85       	ldd	r24, Y+9	; 0x09
     c4a:	82 30       	cpi	r24, 0x02	; 2
     c4c:	40 f0       	brcs	.+16     	; 0xc5e <__ltsf2+0x56>
     c4e:	89 89       	ldd	r24, Y+17	; 0x11
     c50:	82 30       	cpi	r24, 0x02	; 2
     c52:	28 f0       	brcs	.+10     	; 0xc5e <__ltsf2+0x56>
     c54:	c7 01       	movw	r24, r14
     c56:	b8 01       	movw	r22, r16
     c58:	0e 94 d5 07 	call	0xfaa	; 0xfaa <__fpcmp_parts_f>
     c5c:	01 c0       	rjmp	.+2      	; 0xc60 <__ltsf2+0x58>
     c5e:	81 e0       	ldi	r24, 0x01	; 1
     c60:	68 96       	adiw	r28, 0x18	; 24
     c62:	e6 e0       	ldi	r30, 0x06	; 6
     c64:	0c 94 7d 08 	jmp	0x10fa	; 0x10fa <__epilogue_restores__+0x18>

00000c68 <__fixsfsi>:
     c68:	ac e0       	ldi	r26, 0x0C	; 12
     c6a:	b0 e0       	ldi	r27, 0x00	; 0
     c6c:	ea e3       	ldi	r30, 0x3A	; 58
     c6e:	f6 e0       	ldi	r31, 0x06	; 6
     c70:	0c 94 65 08 	jmp	0x10ca	; 0x10ca <__prologue_saves__+0x20>
     c74:	69 83       	std	Y+1, r22	; 0x01
     c76:	7a 83       	std	Y+2, r23	; 0x02
     c78:	8b 83       	std	Y+3, r24	; 0x03
     c7a:	9c 83       	std	Y+4, r25	; 0x04
     c7c:	ce 01       	movw	r24, r28
     c7e:	01 96       	adiw	r24, 0x01	; 1
     c80:	be 01       	movw	r22, r28
     c82:	6b 5f       	subi	r22, 0xFB	; 251
     c84:	7f 4f       	sbci	r23, 0xFF	; 255
     c86:	0e 94 5d 07 	call	0xeba	; 0xeba <__unpack_f>
     c8a:	8d 81       	ldd	r24, Y+5	; 0x05
     c8c:	82 30       	cpi	r24, 0x02	; 2
     c8e:	61 f1       	breq	.+88     	; 0xce8 <__fixsfsi+0x80>
     c90:	82 30       	cpi	r24, 0x02	; 2
     c92:	50 f1       	brcs	.+84     	; 0xce8 <__fixsfsi+0x80>
     c94:	84 30       	cpi	r24, 0x04	; 4
     c96:	21 f4       	brne	.+8      	; 0xca0 <__fixsfsi+0x38>
     c98:	8e 81       	ldd	r24, Y+6	; 0x06
     c9a:	88 23       	and	r24, r24
     c9c:	51 f1       	breq	.+84     	; 0xcf2 <__fixsfsi+0x8a>
     c9e:	2e c0       	rjmp	.+92     	; 0xcfc <__fixsfsi+0x94>
     ca0:	2f 81       	ldd	r18, Y+7	; 0x07
     ca2:	38 85       	ldd	r19, Y+8	; 0x08
     ca4:	37 fd       	sbrc	r19, 7
     ca6:	20 c0       	rjmp	.+64     	; 0xce8 <__fixsfsi+0x80>
     ca8:	6e 81       	ldd	r22, Y+6	; 0x06
     caa:	2f 31       	cpi	r18, 0x1F	; 31
     cac:	31 05       	cpc	r19, r1
     cae:	1c f0       	brlt	.+6      	; 0xcb6 <__fixsfsi+0x4e>
     cb0:	66 23       	and	r22, r22
     cb2:	f9 f0       	breq	.+62     	; 0xcf2 <__fixsfsi+0x8a>
     cb4:	23 c0       	rjmp	.+70     	; 0xcfc <__fixsfsi+0x94>
     cb6:	8e e1       	ldi	r24, 0x1E	; 30
     cb8:	90 e0       	ldi	r25, 0x00	; 0
     cba:	82 1b       	sub	r24, r18
     cbc:	93 0b       	sbc	r25, r19
     cbe:	29 85       	ldd	r18, Y+9	; 0x09
     cc0:	3a 85       	ldd	r19, Y+10	; 0x0a
     cc2:	4b 85       	ldd	r20, Y+11	; 0x0b
     cc4:	5c 85       	ldd	r21, Y+12	; 0x0c
     cc6:	04 c0       	rjmp	.+8      	; 0xcd0 <__fixsfsi+0x68>
     cc8:	56 95       	lsr	r21
     cca:	47 95       	ror	r20
     ccc:	37 95       	ror	r19
     cce:	27 95       	ror	r18
     cd0:	8a 95       	dec	r24
     cd2:	d2 f7       	brpl	.-12     	; 0xcc8 <__fixsfsi+0x60>
     cd4:	66 23       	and	r22, r22
     cd6:	b1 f0       	breq	.+44     	; 0xd04 <__fixsfsi+0x9c>
     cd8:	50 95       	com	r21
     cda:	40 95       	com	r20
     cdc:	30 95       	com	r19
     cde:	21 95       	neg	r18
     ce0:	3f 4f       	sbci	r19, 0xFF	; 255
     ce2:	4f 4f       	sbci	r20, 0xFF	; 255
     ce4:	5f 4f       	sbci	r21, 0xFF	; 255
     ce6:	0e c0       	rjmp	.+28     	; 0xd04 <__fixsfsi+0x9c>
     ce8:	20 e0       	ldi	r18, 0x00	; 0
     cea:	30 e0       	ldi	r19, 0x00	; 0
     cec:	40 e0       	ldi	r20, 0x00	; 0
     cee:	50 e0       	ldi	r21, 0x00	; 0
     cf0:	09 c0       	rjmp	.+18     	; 0xd04 <__fixsfsi+0x9c>
     cf2:	2f ef       	ldi	r18, 0xFF	; 255
     cf4:	3f ef       	ldi	r19, 0xFF	; 255
     cf6:	4f ef       	ldi	r20, 0xFF	; 255
     cf8:	5f e7       	ldi	r21, 0x7F	; 127
     cfa:	04 c0       	rjmp	.+8      	; 0xd04 <__fixsfsi+0x9c>
     cfc:	20 e0       	ldi	r18, 0x00	; 0
     cfe:	30 e0       	ldi	r19, 0x00	; 0
     d00:	40 e0       	ldi	r20, 0x00	; 0
     d02:	50 e8       	ldi	r21, 0x80	; 128
     d04:	b9 01       	movw	r22, r18
     d06:	ca 01       	movw	r24, r20
     d08:	2c 96       	adiw	r28, 0x0c	; 12
     d0a:	e2 e0       	ldi	r30, 0x02	; 2
     d0c:	0c 94 81 08 	jmp	0x1102	; 0x1102 <__epilogue_restores__+0x20>

00000d10 <__pack_f>:
     d10:	df 92       	push	r13
     d12:	ef 92       	push	r14
     d14:	ff 92       	push	r15
     d16:	0f 93       	push	r16
     d18:	1f 93       	push	r17
     d1a:	fc 01       	movw	r30, r24
     d1c:	e4 80       	ldd	r14, Z+4	; 0x04
     d1e:	f5 80       	ldd	r15, Z+5	; 0x05
     d20:	06 81       	ldd	r16, Z+6	; 0x06
     d22:	17 81       	ldd	r17, Z+7	; 0x07
     d24:	d1 80       	ldd	r13, Z+1	; 0x01
     d26:	80 81       	ld	r24, Z
     d28:	82 30       	cpi	r24, 0x02	; 2
     d2a:	48 f4       	brcc	.+18     	; 0xd3e <__pack_f+0x2e>
     d2c:	80 e0       	ldi	r24, 0x00	; 0
     d2e:	90 e0       	ldi	r25, 0x00	; 0
     d30:	a0 e1       	ldi	r26, 0x10	; 16
     d32:	b0 e0       	ldi	r27, 0x00	; 0
     d34:	e8 2a       	or	r14, r24
     d36:	f9 2a       	or	r15, r25
     d38:	0a 2b       	or	r16, r26
     d3a:	1b 2b       	or	r17, r27
     d3c:	a5 c0       	rjmp	.+330    	; 0xe88 <__pack_f+0x178>
     d3e:	84 30       	cpi	r24, 0x04	; 4
     d40:	09 f4       	brne	.+2      	; 0xd44 <__pack_f+0x34>
     d42:	9f c0       	rjmp	.+318    	; 0xe82 <__pack_f+0x172>
     d44:	82 30       	cpi	r24, 0x02	; 2
     d46:	21 f4       	brne	.+8      	; 0xd50 <__pack_f+0x40>
     d48:	ee 24       	eor	r14, r14
     d4a:	ff 24       	eor	r15, r15
     d4c:	87 01       	movw	r16, r14
     d4e:	05 c0       	rjmp	.+10     	; 0xd5a <__pack_f+0x4a>
     d50:	e1 14       	cp	r14, r1
     d52:	f1 04       	cpc	r15, r1
     d54:	01 05       	cpc	r16, r1
     d56:	11 05       	cpc	r17, r1
     d58:	19 f4       	brne	.+6      	; 0xd60 <__pack_f+0x50>
     d5a:	e0 e0       	ldi	r30, 0x00	; 0
     d5c:	f0 e0       	ldi	r31, 0x00	; 0
     d5e:	96 c0       	rjmp	.+300    	; 0xe8c <__pack_f+0x17c>
     d60:	62 81       	ldd	r22, Z+2	; 0x02
     d62:	73 81       	ldd	r23, Z+3	; 0x03
     d64:	9f ef       	ldi	r25, 0xFF	; 255
     d66:	62 38       	cpi	r22, 0x82	; 130
     d68:	79 07       	cpc	r23, r25
     d6a:	0c f0       	brlt	.+2      	; 0xd6e <__pack_f+0x5e>
     d6c:	5b c0       	rjmp	.+182    	; 0xe24 <__pack_f+0x114>
     d6e:	22 e8       	ldi	r18, 0x82	; 130
     d70:	3f ef       	ldi	r19, 0xFF	; 255
     d72:	26 1b       	sub	r18, r22
     d74:	37 0b       	sbc	r19, r23
     d76:	2a 31       	cpi	r18, 0x1A	; 26
     d78:	31 05       	cpc	r19, r1
     d7a:	2c f0       	brlt	.+10     	; 0xd86 <__pack_f+0x76>
     d7c:	20 e0       	ldi	r18, 0x00	; 0
     d7e:	30 e0       	ldi	r19, 0x00	; 0
     d80:	40 e0       	ldi	r20, 0x00	; 0
     d82:	50 e0       	ldi	r21, 0x00	; 0
     d84:	2a c0       	rjmp	.+84     	; 0xdda <__pack_f+0xca>
     d86:	b8 01       	movw	r22, r16
     d88:	a7 01       	movw	r20, r14
     d8a:	02 2e       	mov	r0, r18
     d8c:	04 c0       	rjmp	.+8      	; 0xd96 <__pack_f+0x86>
     d8e:	76 95       	lsr	r23
     d90:	67 95       	ror	r22
     d92:	57 95       	ror	r21
     d94:	47 95       	ror	r20
     d96:	0a 94       	dec	r0
     d98:	d2 f7       	brpl	.-12     	; 0xd8e <__pack_f+0x7e>
     d9a:	81 e0       	ldi	r24, 0x01	; 1
     d9c:	90 e0       	ldi	r25, 0x00	; 0
     d9e:	a0 e0       	ldi	r26, 0x00	; 0
     da0:	b0 e0       	ldi	r27, 0x00	; 0
     da2:	04 c0       	rjmp	.+8      	; 0xdac <__pack_f+0x9c>
     da4:	88 0f       	add	r24, r24
     da6:	99 1f       	adc	r25, r25
     da8:	aa 1f       	adc	r26, r26
     daa:	bb 1f       	adc	r27, r27
     dac:	2a 95       	dec	r18
     dae:	d2 f7       	brpl	.-12     	; 0xda4 <__pack_f+0x94>
     db0:	01 97       	sbiw	r24, 0x01	; 1
     db2:	a1 09       	sbc	r26, r1
     db4:	b1 09       	sbc	r27, r1
     db6:	8e 21       	and	r24, r14
     db8:	9f 21       	and	r25, r15
     dba:	a0 23       	and	r26, r16
     dbc:	b1 23       	and	r27, r17
     dbe:	00 97       	sbiw	r24, 0x00	; 0
     dc0:	a1 05       	cpc	r26, r1
     dc2:	b1 05       	cpc	r27, r1
     dc4:	21 f0       	breq	.+8      	; 0xdce <__pack_f+0xbe>
     dc6:	81 e0       	ldi	r24, 0x01	; 1
     dc8:	90 e0       	ldi	r25, 0x00	; 0
     dca:	a0 e0       	ldi	r26, 0x00	; 0
     dcc:	b0 e0       	ldi	r27, 0x00	; 0
     dce:	9a 01       	movw	r18, r20
     dd0:	ab 01       	movw	r20, r22
     dd2:	28 2b       	or	r18, r24
     dd4:	39 2b       	or	r19, r25
     dd6:	4a 2b       	or	r20, r26
     dd8:	5b 2b       	or	r21, r27
     dda:	da 01       	movw	r26, r20
     ddc:	c9 01       	movw	r24, r18
     dde:	8f 77       	andi	r24, 0x7F	; 127
     de0:	90 70       	andi	r25, 0x00	; 0
     de2:	a0 70       	andi	r26, 0x00	; 0
     de4:	b0 70       	andi	r27, 0x00	; 0
     de6:	80 34       	cpi	r24, 0x40	; 64
     de8:	91 05       	cpc	r25, r1
     dea:	a1 05       	cpc	r26, r1
     dec:	b1 05       	cpc	r27, r1
     dee:	39 f4       	brne	.+14     	; 0xdfe <__pack_f+0xee>
     df0:	27 ff       	sbrs	r18, 7
     df2:	09 c0       	rjmp	.+18     	; 0xe06 <__pack_f+0xf6>
     df4:	20 5c       	subi	r18, 0xC0	; 192
     df6:	3f 4f       	sbci	r19, 0xFF	; 255
     df8:	4f 4f       	sbci	r20, 0xFF	; 255
     dfa:	5f 4f       	sbci	r21, 0xFF	; 255
     dfc:	04 c0       	rjmp	.+8      	; 0xe06 <__pack_f+0xf6>
     dfe:	21 5c       	subi	r18, 0xC1	; 193
     e00:	3f 4f       	sbci	r19, 0xFF	; 255
     e02:	4f 4f       	sbci	r20, 0xFF	; 255
     e04:	5f 4f       	sbci	r21, 0xFF	; 255
     e06:	e0 e0       	ldi	r30, 0x00	; 0
     e08:	f0 e0       	ldi	r31, 0x00	; 0
     e0a:	20 30       	cpi	r18, 0x00	; 0
     e0c:	a0 e0       	ldi	r26, 0x00	; 0
     e0e:	3a 07       	cpc	r19, r26
     e10:	a0 e0       	ldi	r26, 0x00	; 0
     e12:	4a 07       	cpc	r20, r26
     e14:	a0 e4       	ldi	r26, 0x40	; 64
     e16:	5a 07       	cpc	r21, r26
     e18:	10 f0       	brcs	.+4      	; 0xe1e <__pack_f+0x10e>
     e1a:	e1 e0       	ldi	r30, 0x01	; 1
     e1c:	f0 e0       	ldi	r31, 0x00	; 0
     e1e:	79 01       	movw	r14, r18
     e20:	8a 01       	movw	r16, r20
     e22:	27 c0       	rjmp	.+78     	; 0xe72 <__pack_f+0x162>
     e24:	60 38       	cpi	r22, 0x80	; 128
     e26:	71 05       	cpc	r23, r1
     e28:	64 f5       	brge	.+88     	; 0xe82 <__pack_f+0x172>
     e2a:	fb 01       	movw	r30, r22
     e2c:	e1 58       	subi	r30, 0x81	; 129
     e2e:	ff 4f       	sbci	r31, 0xFF	; 255
     e30:	d8 01       	movw	r26, r16
     e32:	c7 01       	movw	r24, r14
     e34:	8f 77       	andi	r24, 0x7F	; 127
     e36:	90 70       	andi	r25, 0x00	; 0
     e38:	a0 70       	andi	r26, 0x00	; 0
     e3a:	b0 70       	andi	r27, 0x00	; 0
     e3c:	80 34       	cpi	r24, 0x40	; 64
     e3e:	91 05       	cpc	r25, r1
     e40:	a1 05       	cpc	r26, r1
     e42:	b1 05       	cpc	r27, r1
     e44:	39 f4       	brne	.+14     	; 0xe54 <__pack_f+0x144>
     e46:	e7 fe       	sbrs	r14, 7
     e48:	0d c0       	rjmp	.+26     	; 0xe64 <__pack_f+0x154>
     e4a:	80 e4       	ldi	r24, 0x40	; 64
     e4c:	90 e0       	ldi	r25, 0x00	; 0
     e4e:	a0 e0       	ldi	r26, 0x00	; 0
     e50:	b0 e0       	ldi	r27, 0x00	; 0
     e52:	04 c0       	rjmp	.+8      	; 0xe5c <__pack_f+0x14c>
     e54:	8f e3       	ldi	r24, 0x3F	; 63
     e56:	90 e0       	ldi	r25, 0x00	; 0
     e58:	a0 e0       	ldi	r26, 0x00	; 0
     e5a:	b0 e0       	ldi	r27, 0x00	; 0
     e5c:	e8 0e       	add	r14, r24
     e5e:	f9 1e       	adc	r15, r25
     e60:	0a 1f       	adc	r16, r26
     e62:	1b 1f       	adc	r17, r27
     e64:	17 ff       	sbrs	r17, 7
     e66:	05 c0       	rjmp	.+10     	; 0xe72 <__pack_f+0x162>
     e68:	16 95       	lsr	r17
     e6a:	07 95       	ror	r16
     e6c:	f7 94       	ror	r15
     e6e:	e7 94       	ror	r14
     e70:	31 96       	adiw	r30, 0x01	; 1
     e72:	87 e0       	ldi	r24, 0x07	; 7
     e74:	16 95       	lsr	r17
     e76:	07 95       	ror	r16
     e78:	f7 94       	ror	r15
     e7a:	e7 94       	ror	r14
     e7c:	8a 95       	dec	r24
     e7e:	d1 f7       	brne	.-12     	; 0xe74 <__pack_f+0x164>
     e80:	05 c0       	rjmp	.+10     	; 0xe8c <__pack_f+0x17c>
     e82:	ee 24       	eor	r14, r14
     e84:	ff 24       	eor	r15, r15
     e86:	87 01       	movw	r16, r14
     e88:	ef ef       	ldi	r30, 0xFF	; 255
     e8a:	f0 e0       	ldi	r31, 0x00	; 0
     e8c:	6e 2f       	mov	r22, r30
     e8e:	67 95       	ror	r22
     e90:	66 27       	eor	r22, r22
     e92:	67 95       	ror	r22
     e94:	90 2f       	mov	r25, r16
     e96:	9f 77       	andi	r25, 0x7F	; 127
     e98:	d7 94       	ror	r13
     e9a:	dd 24       	eor	r13, r13
     e9c:	d7 94       	ror	r13
     e9e:	8e 2f       	mov	r24, r30
     ea0:	86 95       	lsr	r24
     ea2:	49 2f       	mov	r20, r25
     ea4:	46 2b       	or	r20, r22
     ea6:	58 2f       	mov	r21, r24
     ea8:	5d 29       	or	r21, r13
     eaa:	b7 01       	movw	r22, r14
     eac:	ca 01       	movw	r24, r20
     eae:	1f 91       	pop	r17
     eb0:	0f 91       	pop	r16
     eb2:	ff 90       	pop	r15
     eb4:	ef 90       	pop	r14
     eb6:	df 90       	pop	r13
     eb8:	08 95       	ret

00000eba <__unpack_f>:
     eba:	fc 01       	movw	r30, r24
     ebc:	db 01       	movw	r26, r22
     ebe:	40 81       	ld	r20, Z
     ec0:	51 81       	ldd	r21, Z+1	; 0x01
     ec2:	22 81       	ldd	r18, Z+2	; 0x02
     ec4:	62 2f       	mov	r22, r18
     ec6:	6f 77       	andi	r22, 0x7F	; 127
     ec8:	70 e0       	ldi	r23, 0x00	; 0
     eca:	22 1f       	adc	r18, r18
     ecc:	22 27       	eor	r18, r18
     ece:	22 1f       	adc	r18, r18
     ed0:	93 81       	ldd	r25, Z+3	; 0x03
     ed2:	89 2f       	mov	r24, r25
     ed4:	88 0f       	add	r24, r24
     ed6:	82 2b       	or	r24, r18
     ed8:	28 2f       	mov	r18, r24
     eda:	30 e0       	ldi	r19, 0x00	; 0
     edc:	99 1f       	adc	r25, r25
     ede:	99 27       	eor	r25, r25
     ee0:	99 1f       	adc	r25, r25
     ee2:	11 96       	adiw	r26, 0x01	; 1
     ee4:	9c 93       	st	X, r25
     ee6:	11 97       	sbiw	r26, 0x01	; 1
     ee8:	21 15       	cp	r18, r1
     eea:	31 05       	cpc	r19, r1
     eec:	a9 f5       	brne	.+106    	; 0xf58 <__unpack_f+0x9e>
     eee:	41 15       	cp	r20, r1
     ef0:	51 05       	cpc	r21, r1
     ef2:	61 05       	cpc	r22, r1
     ef4:	71 05       	cpc	r23, r1
     ef6:	11 f4       	brne	.+4      	; 0xefc <__unpack_f+0x42>
     ef8:	82 e0       	ldi	r24, 0x02	; 2
     efa:	37 c0       	rjmp	.+110    	; 0xf6a <__unpack_f+0xb0>
     efc:	82 e8       	ldi	r24, 0x82	; 130
     efe:	9f ef       	ldi	r25, 0xFF	; 255
     f00:	13 96       	adiw	r26, 0x03	; 3
     f02:	9c 93       	st	X, r25
     f04:	8e 93       	st	-X, r24
     f06:	12 97       	sbiw	r26, 0x02	; 2
     f08:	9a 01       	movw	r18, r20
     f0a:	ab 01       	movw	r20, r22
     f0c:	67 e0       	ldi	r22, 0x07	; 7
     f0e:	22 0f       	add	r18, r18
     f10:	33 1f       	adc	r19, r19
     f12:	44 1f       	adc	r20, r20
     f14:	55 1f       	adc	r21, r21
     f16:	6a 95       	dec	r22
     f18:	d1 f7       	brne	.-12     	; 0xf0e <__unpack_f+0x54>
     f1a:	83 e0       	ldi	r24, 0x03	; 3
     f1c:	8c 93       	st	X, r24
     f1e:	0d c0       	rjmp	.+26     	; 0xf3a <__unpack_f+0x80>
     f20:	22 0f       	add	r18, r18
     f22:	33 1f       	adc	r19, r19
     f24:	44 1f       	adc	r20, r20
     f26:	55 1f       	adc	r21, r21
     f28:	12 96       	adiw	r26, 0x02	; 2
     f2a:	8d 91       	ld	r24, X+
     f2c:	9c 91       	ld	r25, X
     f2e:	13 97       	sbiw	r26, 0x03	; 3
     f30:	01 97       	sbiw	r24, 0x01	; 1
     f32:	13 96       	adiw	r26, 0x03	; 3
     f34:	9c 93       	st	X, r25
     f36:	8e 93       	st	-X, r24
     f38:	12 97       	sbiw	r26, 0x02	; 2
     f3a:	20 30       	cpi	r18, 0x00	; 0
     f3c:	80 e0       	ldi	r24, 0x00	; 0
     f3e:	38 07       	cpc	r19, r24
     f40:	80 e0       	ldi	r24, 0x00	; 0
     f42:	48 07       	cpc	r20, r24
     f44:	80 e4       	ldi	r24, 0x40	; 64
     f46:	58 07       	cpc	r21, r24
     f48:	58 f3       	brcs	.-42     	; 0xf20 <__unpack_f+0x66>
     f4a:	14 96       	adiw	r26, 0x04	; 4
     f4c:	2d 93       	st	X+, r18
     f4e:	3d 93       	st	X+, r19
     f50:	4d 93       	st	X+, r20
     f52:	5c 93       	st	X, r21
     f54:	17 97       	sbiw	r26, 0x07	; 7
     f56:	08 95       	ret
     f58:	2f 3f       	cpi	r18, 0xFF	; 255
     f5a:	31 05       	cpc	r19, r1
     f5c:	79 f4       	brne	.+30     	; 0xf7c <__unpack_f+0xc2>
     f5e:	41 15       	cp	r20, r1
     f60:	51 05       	cpc	r21, r1
     f62:	61 05       	cpc	r22, r1
     f64:	71 05       	cpc	r23, r1
     f66:	19 f4       	brne	.+6      	; 0xf6e <__unpack_f+0xb4>
     f68:	84 e0       	ldi	r24, 0x04	; 4
     f6a:	8c 93       	st	X, r24
     f6c:	08 95       	ret
     f6e:	64 ff       	sbrs	r22, 4
     f70:	03 c0       	rjmp	.+6      	; 0xf78 <__unpack_f+0xbe>
     f72:	81 e0       	ldi	r24, 0x01	; 1
     f74:	8c 93       	st	X, r24
     f76:	12 c0       	rjmp	.+36     	; 0xf9c <__unpack_f+0xe2>
     f78:	1c 92       	st	X, r1
     f7a:	10 c0       	rjmp	.+32     	; 0xf9c <__unpack_f+0xe2>
     f7c:	2f 57       	subi	r18, 0x7F	; 127
     f7e:	30 40       	sbci	r19, 0x00	; 0
     f80:	13 96       	adiw	r26, 0x03	; 3
     f82:	3c 93       	st	X, r19
     f84:	2e 93       	st	-X, r18
     f86:	12 97       	sbiw	r26, 0x02	; 2
     f88:	83 e0       	ldi	r24, 0x03	; 3
     f8a:	8c 93       	st	X, r24
     f8c:	87 e0       	ldi	r24, 0x07	; 7
     f8e:	44 0f       	add	r20, r20
     f90:	55 1f       	adc	r21, r21
     f92:	66 1f       	adc	r22, r22
     f94:	77 1f       	adc	r23, r23
     f96:	8a 95       	dec	r24
     f98:	d1 f7       	brne	.-12     	; 0xf8e <__unpack_f+0xd4>
     f9a:	70 64       	ori	r23, 0x40	; 64
     f9c:	14 96       	adiw	r26, 0x04	; 4
     f9e:	4d 93       	st	X+, r20
     fa0:	5d 93       	st	X+, r21
     fa2:	6d 93       	st	X+, r22
     fa4:	7c 93       	st	X, r23
     fa6:	17 97       	sbiw	r26, 0x07	; 7
     fa8:	08 95       	ret

00000faa <__fpcmp_parts_f>:
     faa:	1f 93       	push	r17
     fac:	dc 01       	movw	r26, r24
     fae:	fb 01       	movw	r30, r22
     fb0:	9c 91       	ld	r25, X
     fb2:	92 30       	cpi	r25, 0x02	; 2
     fb4:	08 f4       	brcc	.+2      	; 0xfb8 <__fpcmp_parts_f+0xe>
     fb6:	47 c0       	rjmp	.+142    	; 0x1046 <__fpcmp_parts_f+0x9c>
     fb8:	80 81       	ld	r24, Z
     fba:	82 30       	cpi	r24, 0x02	; 2
     fbc:	08 f4       	brcc	.+2      	; 0xfc0 <__fpcmp_parts_f+0x16>
     fbe:	43 c0       	rjmp	.+134    	; 0x1046 <__fpcmp_parts_f+0x9c>
     fc0:	94 30       	cpi	r25, 0x04	; 4
     fc2:	51 f4       	brne	.+20     	; 0xfd8 <__fpcmp_parts_f+0x2e>
     fc4:	11 96       	adiw	r26, 0x01	; 1
     fc6:	1c 91       	ld	r17, X
     fc8:	84 30       	cpi	r24, 0x04	; 4
     fca:	99 f5       	brne	.+102    	; 0x1032 <__fpcmp_parts_f+0x88>
     fcc:	81 81       	ldd	r24, Z+1	; 0x01
     fce:	68 2f       	mov	r22, r24
     fd0:	70 e0       	ldi	r23, 0x00	; 0
     fd2:	61 1b       	sub	r22, r17
     fd4:	71 09       	sbc	r23, r1
     fd6:	3f c0       	rjmp	.+126    	; 0x1056 <__fpcmp_parts_f+0xac>
     fd8:	84 30       	cpi	r24, 0x04	; 4
     fda:	21 f0       	breq	.+8      	; 0xfe4 <__fpcmp_parts_f+0x3a>
     fdc:	92 30       	cpi	r25, 0x02	; 2
     fde:	31 f4       	brne	.+12     	; 0xfec <__fpcmp_parts_f+0x42>
     fe0:	82 30       	cpi	r24, 0x02	; 2
     fe2:	b9 f1       	breq	.+110    	; 0x1052 <__fpcmp_parts_f+0xa8>
     fe4:	81 81       	ldd	r24, Z+1	; 0x01
     fe6:	88 23       	and	r24, r24
     fe8:	89 f1       	breq	.+98     	; 0x104c <__fpcmp_parts_f+0xa2>
     fea:	2d c0       	rjmp	.+90     	; 0x1046 <__fpcmp_parts_f+0x9c>
     fec:	11 96       	adiw	r26, 0x01	; 1
     fee:	1c 91       	ld	r17, X
     ff0:	11 97       	sbiw	r26, 0x01	; 1
     ff2:	82 30       	cpi	r24, 0x02	; 2
     ff4:	f1 f0       	breq	.+60     	; 0x1032 <__fpcmp_parts_f+0x88>
     ff6:	81 81       	ldd	r24, Z+1	; 0x01
     ff8:	18 17       	cp	r17, r24
     ffa:	d9 f4       	brne	.+54     	; 0x1032 <__fpcmp_parts_f+0x88>
     ffc:	12 96       	adiw	r26, 0x02	; 2
     ffe:	2d 91       	ld	r18, X+
    1000:	3c 91       	ld	r19, X
    1002:	13 97       	sbiw	r26, 0x03	; 3
    1004:	82 81       	ldd	r24, Z+2	; 0x02
    1006:	93 81       	ldd	r25, Z+3	; 0x03
    1008:	82 17       	cp	r24, r18
    100a:	93 07       	cpc	r25, r19
    100c:	94 f0       	brlt	.+36     	; 0x1032 <__fpcmp_parts_f+0x88>
    100e:	28 17       	cp	r18, r24
    1010:	39 07       	cpc	r19, r25
    1012:	bc f0       	brlt	.+46     	; 0x1042 <__fpcmp_parts_f+0x98>
    1014:	14 96       	adiw	r26, 0x04	; 4
    1016:	8d 91       	ld	r24, X+
    1018:	9d 91       	ld	r25, X+
    101a:	0d 90       	ld	r0, X+
    101c:	bc 91       	ld	r27, X
    101e:	a0 2d       	mov	r26, r0
    1020:	24 81       	ldd	r18, Z+4	; 0x04
    1022:	35 81       	ldd	r19, Z+5	; 0x05
    1024:	46 81       	ldd	r20, Z+6	; 0x06
    1026:	57 81       	ldd	r21, Z+7	; 0x07
    1028:	28 17       	cp	r18, r24
    102a:	39 07       	cpc	r19, r25
    102c:	4a 07       	cpc	r20, r26
    102e:	5b 07       	cpc	r21, r27
    1030:	18 f4       	brcc	.+6      	; 0x1038 <__fpcmp_parts_f+0x8e>
    1032:	11 23       	and	r17, r17
    1034:	41 f0       	breq	.+16     	; 0x1046 <__fpcmp_parts_f+0x9c>
    1036:	0a c0       	rjmp	.+20     	; 0x104c <__fpcmp_parts_f+0xa2>
    1038:	82 17       	cp	r24, r18
    103a:	93 07       	cpc	r25, r19
    103c:	a4 07       	cpc	r26, r20
    103e:	b5 07       	cpc	r27, r21
    1040:	40 f4       	brcc	.+16     	; 0x1052 <__fpcmp_parts_f+0xa8>
    1042:	11 23       	and	r17, r17
    1044:	19 f0       	breq	.+6      	; 0x104c <__fpcmp_parts_f+0xa2>
    1046:	61 e0       	ldi	r22, 0x01	; 1
    1048:	70 e0       	ldi	r23, 0x00	; 0
    104a:	05 c0       	rjmp	.+10     	; 0x1056 <__fpcmp_parts_f+0xac>
    104c:	6f ef       	ldi	r22, 0xFF	; 255
    104e:	7f ef       	ldi	r23, 0xFF	; 255
    1050:	02 c0       	rjmp	.+4      	; 0x1056 <__fpcmp_parts_f+0xac>
    1052:	60 e0       	ldi	r22, 0x00	; 0
    1054:	70 e0       	ldi	r23, 0x00	; 0
    1056:	cb 01       	movw	r24, r22
    1058:	1f 91       	pop	r17
    105a:	08 95       	ret

0000105c <__divmodhi4>:
    105c:	97 fb       	bst	r25, 7
    105e:	09 2e       	mov	r0, r25
    1060:	07 26       	eor	r0, r23
    1062:	0a d0       	rcall	.+20     	; 0x1078 <__divmodhi4_neg1>
    1064:	77 fd       	sbrc	r23, 7
    1066:	04 d0       	rcall	.+8      	; 0x1070 <__divmodhi4_neg2>
    1068:	0c d0       	rcall	.+24     	; 0x1082 <__udivmodhi4>
    106a:	06 d0       	rcall	.+12     	; 0x1078 <__divmodhi4_neg1>
    106c:	00 20       	and	r0, r0
    106e:	1a f4       	brpl	.+6      	; 0x1076 <__divmodhi4_exit>

00001070 <__divmodhi4_neg2>:
    1070:	70 95       	com	r23
    1072:	61 95       	neg	r22
    1074:	7f 4f       	sbci	r23, 0xFF	; 255

00001076 <__divmodhi4_exit>:
    1076:	08 95       	ret

00001078 <__divmodhi4_neg1>:
    1078:	f6 f7       	brtc	.-4      	; 0x1076 <__divmodhi4_exit>
    107a:	90 95       	com	r25
    107c:	81 95       	neg	r24
    107e:	9f 4f       	sbci	r25, 0xFF	; 255
    1080:	08 95       	ret

00001082 <__udivmodhi4>:
    1082:	aa 1b       	sub	r26, r26
    1084:	bb 1b       	sub	r27, r27
    1086:	51 e1       	ldi	r21, 0x11	; 17
    1088:	07 c0       	rjmp	.+14     	; 0x1098 <__udivmodhi4_ep>

0000108a <__udivmodhi4_loop>:
    108a:	aa 1f       	adc	r26, r26
    108c:	bb 1f       	adc	r27, r27
    108e:	a6 17       	cp	r26, r22
    1090:	b7 07       	cpc	r27, r23
    1092:	10 f0       	brcs	.+4      	; 0x1098 <__udivmodhi4_ep>
    1094:	a6 1b       	sub	r26, r22
    1096:	b7 0b       	sbc	r27, r23

00001098 <__udivmodhi4_ep>:
    1098:	88 1f       	adc	r24, r24
    109a:	99 1f       	adc	r25, r25
    109c:	5a 95       	dec	r21
    109e:	a9 f7       	brne	.-22     	; 0x108a <__udivmodhi4_loop>
    10a0:	80 95       	com	r24
    10a2:	90 95       	com	r25
    10a4:	bc 01       	movw	r22, r24
    10a6:	cd 01       	movw	r24, r26
    10a8:	08 95       	ret

000010aa <__prologue_saves__>:
    10aa:	2f 92       	push	r2
    10ac:	3f 92       	push	r3
    10ae:	4f 92       	push	r4
    10b0:	5f 92       	push	r5
    10b2:	6f 92       	push	r6
    10b4:	7f 92       	push	r7
    10b6:	8f 92       	push	r8
    10b8:	9f 92       	push	r9
    10ba:	af 92       	push	r10
    10bc:	bf 92       	push	r11
    10be:	cf 92       	push	r12
    10c0:	df 92       	push	r13
    10c2:	ef 92       	push	r14
    10c4:	ff 92       	push	r15
    10c6:	0f 93       	push	r16
    10c8:	1f 93       	push	r17
    10ca:	cf 93       	push	r28
    10cc:	df 93       	push	r29
    10ce:	cd b7       	in	r28, 0x3d	; 61
    10d0:	de b7       	in	r29, 0x3e	; 62
    10d2:	ca 1b       	sub	r28, r26
    10d4:	db 0b       	sbc	r29, r27
    10d6:	0f b6       	in	r0, 0x3f	; 63
    10d8:	f8 94       	cli
    10da:	de bf       	out	0x3e, r29	; 62
    10dc:	0f be       	out	0x3f, r0	; 63
    10de:	cd bf       	out	0x3d, r28	; 61
    10e0:	09 94       	ijmp

000010e2 <__epilogue_restores__>:
    10e2:	2a 88       	ldd	r2, Y+18	; 0x12
    10e4:	39 88       	ldd	r3, Y+17	; 0x11
    10e6:	48 88       	ldd	r4, Y+16	; 0x10
    10e8:	5f 84       	ldd	r5, Y+15	; 0x0f
    10ea:	6e 84       	ldd	r6, Y+14	; 0x0e
    10ec:	7d 84       	ldd	r7, Y+13	; 0x0d
    10ee:	8c 84       	ldd	r8, Y+12	; 0x0c
    10f0:	9b 84       	ldd	r9, Y+11	; 0x0b
    10f2:	aa 84       	ldd	r10, Y+10	; 0x0a
    10f4:	b9 84       	ldd	r11, Y+9	; 0x09
    10f6:	c8 84       	ldd	r12, Y+8	; 0x08
    10f8:	df 80       	ldd	r13, Y+7	; 0x07
    10fa:	ee 80       	ldd	r14, Y+6	; 0x06
    10fc:	fd 80       	ldd	r15, Y+5	; 0x05
    10fe:	0c 81       	ldd	r16, Y+4	; 0x04
    1100:	1b 81       	ldd	r17, Y+3	; 0x03
    1102:	aa 81       	ldd	r26, Y+2	; 0x02
    1104:	b9 81       	ldd	r27, Y+1	; 0x01
    1106:	ce 0f       	add	r28, r30
    1108:	d1 1d       	adc	r29, r1
    110a:	0f b6       	in	r0, 0x3f	; 63
    110c:	f8 94       	cli
    110e:	de bf       	out	0x3e, r29	; 62
    1110:	0f be       	out	0x3f, r0	; 63
    1112:	cd bf       	out	0x3d, r28	; 61
    1114:	ed 01       	movw	r28, r26
    1116:	08 95       	ret

00001118 <_exit>:
    1118:	f8 94       	cli

0000111a <__stop_program>:
    111a:	ff cf       	rjmp	.-2      	; 0x111a <__stop_program>
